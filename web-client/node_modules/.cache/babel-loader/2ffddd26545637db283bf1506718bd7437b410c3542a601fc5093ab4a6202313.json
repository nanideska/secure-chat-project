{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\han_m\\\\OneDrive\\\\Documents\\\\gitProjects\\\\secure_chat_project\\\\web-client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\n\n// Connect to the server\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000', {\n  reconnection: true,\n  reconnectionAttempts: 10,\n  reconnectionDelay: 1000,\n  reconnectionDelayMax: 5000,\n  timeout: 20000\n});\nfunction App() {\n  _s();\n  var _roomsInfo$room, _roomsInfo$room2, _roomsInfo$room3, _roomsInfo$room4, _roomsInfo$room5, _roomsInfo$room6, _roomsInfo$room7, _roomsInfo$room8;\n  const [user, setUser] = useState(null);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [name, setName] = useState('');\n  const [role, setRole] = useState('student');\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [room, setRoom] = useState('general');\n  const [roomsInfo, setRoomsInfo] = useState({});\n  const [connected, setConnected] = useState(socket.connected);\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState({});\n  const [showFileStorage, setShowFileStorage] = useState(false);\n  const messagesEndRef = useRef(null);\n  const notificationSound = useRef(null);\n\n  // Initialize notification sound with error handling\n  useEffect(() => {\n    try {\n      notificationSound.current = new Audio('/notification.mp3');\n      notificationSound.current.load(); // Preload the sound file\n    } catch (error) {\n      console.log('Error initializing notification sound:', error);\n    }\n  }, []);\n\n  // Auto-scroll to the bottom of messages\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Setup browser notifications\n  useEffect(() => {\n    // Request notification permission\n    if (Notification.permission !== 'granted' && Notification.permission !== 'denied') {\n      Notification.requestPermission();\n    }\n  }, []);\n\n  // Get files for the file storage page\n  const getFiles = () => {\n    return messages.filter(msg => msg.isFile);\n  };\n\n  // Play notification sound with better error handling\n  const playNotificationSound = () => {\n    if (!notificationSound.current) return;\n    try {\n      const playPromise = notificationSound.current.play();\n      if (playPromise !== undefined) {\n        playPromise.catch(e => console.log('Error playing sound:', e));\n      }\n    } catch (error) {\n      console.log('Error playing notification sound:', error);\n    }\n  };\n\n  // Show browser notification\n  const showBrowserNotification = (title, body) => {\n    if (Notification.permission === 'granted' && document.hidden) {\n      try {\n        new Notification(title, {\n          body: body,\n          icon: '/favicon.ico'\n        });\n      } catch (error) {\n        console.log('Error showing notification:', error);\n      }\n    }\n  };\n\n  // Socket event listeners for connection status\n  useEffect(() => {\n    // Handle connection status\n    socket.on('connect', () => {\n      console.log('Connected to server');\n      setConnected(true);\n\n      // If user was already logged in, try to reconnect\n      if (user) {\n        socket.emit('reconnect', {\n          name: user.name,\n          role: user.role,\n          id: user.id\n        });\n      }\n    });\n    socket.on('disconnect', () => {\n      console.log('Disconnected from server');\n      setConnected(false);\n    });\n    socket.on('connect_error', error => {\n      console.log('Connection error:', error.message);\n      setConnected(false);\n    });\n\n    // Handle reconnection success\n    socket.on('reconnected', data => {\n      console.log('Reconnected successfully');\n    });\n\n    // Handle room info\n    socket.on('roomsInfo', rooms => {\n      setRoomsInfo(rooms);\n    });\n\n    // Handle server ping to keep connection alive\n    socket.on('ping', () => {\n      socket.emit('pong');\n    });\n\n    // Handle errors\n    socket.on('error', error => {\n      alert(error.message);\n    });\n    return () => {\n      socket.off('connect');\n      socket.off('disconnect');\n      socket.off('connect_error');\n      socket.off('reconnected');\n      socket.off('roomsInfo');\n      socket.off('ping');\n      socket.off('error');\n    };\n  }, [user]);\n\n  // Handle message history loading\n  useEffect(() => {\n    // Handle previous messages from server when reconnecting or logging in\n    socket.on('previousMessages', messagesData => {\n      console.log('Received previous messages:', messagesData.length);\n      setMessages(prevMessages => {\n        // Filter out duplicates by messageId\n        const existingIds = new Set(prevMessages.map(m => m.messageId));\n        const newMessages = messagesData.filter(m => !existingIds.has(m.messageId));\n\n        // Combine existing and new messages, then sort by timestamp\n        const combinedMessages = [...prevMessages, ...newMessages];\n        return combinedMessages.sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n      });\n    });\n    return () => {\n      socket.off('previousMessages');\n    };\n  }, []);\n\n  // Messaging and notifications socket events\n  useEffect(() => {\n    // Handle incoming messages\n    socket.on('message', messageData => {\n      console.log('Received message:', messageData);\n\n      // Use functional form of setState to ensure working with the latest state\n      setMessages(prevMessages => {\n        // Check if this message already exists (avoid duplicates)\n        if (messageData.messageId && prevMessages.some(msg => msg.messageId === messageData.messageId)) {\n          return prevMessages;\n        }\n        return [...prevMessages, messageData];\n      });\n\n      // Update unread count\n      if (messageData.room === room || messageData.senderId === (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) && messageData.recipientId === socket.id || messageData.recipientId === (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) && messageData.senderId === socket.id) {\n        // Reset unread count for current chat\n        setUnreadCount(prev => ({\n          ...prev,\n          [messageData.room || messageData.senderId]: 0\n        }));\n      } else if (messageData.senderId !== socket.id) {\n        // Increment unread count for other chats\n        const key = messageData.room || messageData.senderId;\n        setUnreadCount(prev => ({\n          ...prev,\n          [key]: (prev[key] || 0) + 1\n        }));\n      }\n    });\n\n    // Handle file sharing\n    socket.on('fileShared', fileData => {\n      console.log('Received file shared event:', fileData);\n\n      // Only process if it's meant for this user\n      if (fileData.recipientId && fileData.recipientId !== socket.id) return;\n      if (fileData.room && fileData.room !== room && fileData.senderId !== socket.id) return;\n\n      // For direct messages sent by the current user, we've already added them locally\n      if (fileData.confirmation && fileData.senderId === socket.id) return;\n\n      // Ensure file data is properly formatted\n      const fileMessage = {\n        text: `Shared file: ${fileData.name}`,\n        sender: fileData.sender,\n        senderId: fileData.senderId,\n        role: fileData.role || 'unknown',\n        timestamp: fileData.timestamp || new Date().toISOString(),\n        isFile: true,\n        messageId: fileData.messageId,\n        fileData: {\n          name: fileData.name,\n          type: fileData.type || 'application/octet-stream',\n          size: fileData.size || 0,\n          data: fileData.data\n        }\n      };\n      if (fileData.recipientId) {\n        fileMessage.recipientId = fileData.recipientId;\n        fileMessage.recipientName = fileData.recipientName;\n      } else {\n        fileMessage.room = fileData.room;\n      }\n\n      // Check if this message already exists\n      setMessages(prevMessages => {\n        if (fileData.messageId && prevMessages.some(msg => msg.messageId === fileData.messageId)) {\n          return prevMessages;\n        }\n        console.log('Adding file message to state:', fileMessage.text);\n        return [...prevMessages, fileMessage];\n      });\n\n      // Update unread count for other chats\n      if (fileData.senderId !== socket.id && (fileData.room && fileData.room !== room || fileData.senderId && (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) !== fileData.senderId)) {\n        const key = fileData.room || fileData.senderId;\n        setUnreadCount(prev => ({\n          ...prev,\n          [key]: (prev[key] || 0) + 1\n        }));\n      }\n    });\n\n    // Handle notifications\n    socket.on('notification', notification => {\n      // Don't show notifications for the current room or selected user\n      if (notification.room && notification.room === room) return;\n      if (notification.from === (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.name)) return;\n\n      // Add to notifications list with required fields\n      setNotifications(prev => [...prev, {\n        ...notification,\n        id: notification.id || Date.now(),\n        preview: notification.preview || 'New notification'\n      }]);\n\n      // Play sound for all notifications\n      playNotificationSound();\n\n      // Show browser notification based on type\n      switch (notification.type) {\n        case 'newMessage':\n          showBrowserNotification(`New message from ${notification.from}`, notification.preview || 'New message');\n          break;\n        case 'newRoomMessage':\n          showBrowserNotification(`New message in ${notification.room}`, `${notification.from}: ${notification.preview || 'New message'}`);\n          break;\n        case 'newFile':\n          showBrowserNotification(`New file from ${notification.from}`, `Shared file: ${notification.fileName || 'File'}`);\n          break;\n        case 'newRoomFile':\n          showBrowserNotification(`New file in ${notification.room}`, `${notification.from} shared file: ${notification.fileName || 'File'}`);\n          break;\n        default:\n          break;\n      }\n    });\n\n    // Handle receiving user list\n    socket.on('usersList', usersList => {\n      setUsers(usersList);\n    });\n\n    // Handle user joining\n    socket.on('userJoined', userData => {\n      setUsers(prevUsers => {\n        // Check if user already exists\n        const exists = prevUsers.some(u => u.id === userData.id);\n        if (!exists) {\n          return [...prevUsers, userData];\n        }\n        return prevUsers;\n      });\n\n      // Only add system message if it's for the correct room\n      setMessages(prevMessages => [...prevMessages, {\n        system: true,\n        text: `${userData.name} joined the chat`,\n        timestamp: new Date().toISOString(),\n        room: userData.room || 'general' // Use the room from userData\n      }]);\n    });\n\n    // Handle user going offline\n    socket.on('userOffline', userData => {\n      setUsers(prevUsers => {\n        return prevUsers.map(user => {\n          if (user.id === userData.id) {\n            return {\n              ...user,\n              offline: true\n            };\n          }\n          return user;\n        });\n      });\n      setMessages(prevMessages => [...prevMessages, {\n        system: true,\n        text: `${userData.name} went offline`,\n        timestamp: new Date().toISOString(),\n        room: 'general'\n      }]);\n    });\n\n    // Handle user leaving\n    socket.on('userLeft', userData => {\n      setUsers(prevUsers => prevUsers.filter(u => u.id !== userData.id));\n\n      // Only add system message if it's for the correct room\n      setMessages(prevMessages => [...prevMessages, {\n        system: true,\n        text: `${userData.name || 'A user'} left the chat`,\n        timestamp: new Date().toISOString(),\n        room: userData.room || 'general' // Use the room from userData\n      }]);\n\n      // Clear selected user if they left\n      if (selectedUser && selectedUser.id === userData.id) {\n        setSelectedUser(null);\n        setRoom('general');\n      }\n    });\n\n    // Clean up on unmount\n    return () => {\n      socket.off('message');\n      socket.off('fileShared');\n      socket.off('notification');\n      socket.off('usersList');\n      socket.off('userJoined');\n      socket.off('userOffline');\n      socket.off('userLeft');\n    };\n  }, [selectedUser, room, socket.id]);\n\n  // Reset unread count when changing room or selected user\n  useEffect(() => {\n    if (room) {\n      setUnreadCount(prev => ({\n        ...prev,\n        [room]: 0\n      }));\n    } else if (selectedUser) {\n      setUnreadCount(prev => ({\n        ...prev,\n        [selectedUser.id]: 0\n      }));\n    }\n  }, [room, selectedUser]);\n\n  // Handle joining the chat\n  const handleJoin = e => {\n    e.preventDefault();\n    if (!name.trim()) return;\n\n    // Join the chat\n    const userData = {\n      name,\n      role\n    };\n    socket.emit('join', userData);\n    setUser({\n      ...userData,\n      id: socket.id\n    });\n\n    // Join general room by default\n    handleJoinRoom('general');\n  };\n\n  // Handle joining a room\n  const handleJoinRoom = roomName => {\n    socket.emit('joinRoom', roomName);\n    setRoom(roomName);\n    setSelectedUser(null);\n  };\n\n  // Handle selecting a user for direct message\n  const handleSelectUser = selectedUser => {\n    setSelectedUser(selectedUser);\n    setRoom(null);\n  };\n\n  // Handle sending messages\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (!message.trim() || !user) return;\n\n    // Check if user has permission to post in this room\n    if (room && roomsInfo[room] && roomsInfo[room].postingRoles && !roomsInfo[room].postingRoles.includes(role)) {\n      alert(`Only ${roomsInfo[room].postingRoles.join(', ')} can post in ${roomsInfo[room].name}`);\n      return;\n    }\n\n    // Prepare message data\n    const messageData = {\n      text: message,\n      sender: user.name,\n      senderId: socket.id,\n      role: user.role,\n      timestamp: new Date().toISOString(),\n      messageId: Date.now().toString() + '-' + Math.random().toString(36).substr(2, 9)\n    };\n\n    // Add recipient or room information\n    if (selectedUser) {\n      messageData.recipientId = selectedUser.id;\n      messageData.recipientName = selectedUser.name;\n    } else {\n      messageData.room = room;\n    }\n\n    // Send the message\n    socket.emit('message', messageData);\n\n    // Also add it immediately to our local state for better responsiveness\n    setMessages(prevMessages => [...prevMessages, messageData]);\n\n    // Clear the input\n    setMessage('');\n  };\n\n  // Handle file upload\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n\n    // Check if user has permission to post in this room\n    if (room && roomsInfo[room] && roomsInfo[room].postingRoles && !roomsInfo[room].postingRoles.includes(role)) {\n      alert(`Only ${roomsInfo[room].postingRoles.join(', ')} can post in ${roomsInfo[room].name}`);\n      return;\n    }\n\n    // Limit file size to 5MB\n    if (file.size > 5 * 1024 * 1024) {\n      alert('File size exceeds 5MB limit');\n      return;\n    }\n\n    // Create a reader to read the file\n    const reader = new FileReader();\n    reader.onload = event => {\n      // Generate a unique message ID to track this upload\n      const messageId = Date.now().toString() + '-' + Math.random().toString(36).substr(2, 9);\n\n      // File metadata to share with others\n      const fileData = {\n        name: file.name,\n        size: file.size,\n        type: file.type,\n        sender: user.name,\n        senderId: socket.id,\n        role: user.role,\n        timestamp: new Date().toISOString(),\n        messageId: messageId // Add a unique ID\n      };\n\n      // Add recipient or room information\n      if (selectedUser) {\n        fileData.recipientId = selectedUser.id;\n        fileData.recipientName = selectedUser.name;\n      } else {\n        fileData.room = room;\n      }\n\n      // Create a downloadable link for the file (base64 encoded)\n      const base64Data = event.target.result;\n      fileData.data = base64Data;\n\n      // Send file notification through socket\n      socket.emit('fileShared', fileData);\n\n      // Add file message to local messages\n      const fileMessage = {\n        text: `Shared file: ${file.name}`,\n        sender: user.name,\n        senderId: socket.id,\n        role: user.role,\n        timestamp: new Date().toISOString(),\n        isFile: true,\n        messageId: messageId,\n        fileData: {\n          name: file.name,\n          type: file.type,\n          size: file.size,\n          data: base64Data\n        }\n      };\n      if (selectedUser) {\n        fileMessage.recipientId = selectedUser.id;\n        fileMessage.recipientName = selectedUser.name;\n      } else {\n        fileMessage.room = room;\n      }\n      setMessages(prevMessages => [...prevMessages, fileMessage]);\n    };\n\n    // Read file as data URL (base64)\n    reader.readAsDataURL(file);\n  };\n\n  // Handle file download\n  const handleFileDownload = fileData => {\n    // Create a link element\n    const link = document.createElement('a');\n    link.href = fileData.data;\n    link.download = fileData.name;\n\n    // Append to body, click, and remove\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Dismiss a notification\n  const dismissNotification = id => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  };\n\n  // Clear all notifications\n  const clearAllNotifications = () => {\n    setNotifications([]);\n  };\n\n  // Handle reconnect button click\n  const handleReconnect = () => {\n    if (!connected) {\n      socket.connect();\n      if (user) {\n        socket.once('connect', () => {\n          socket.emit('reconnect', {\n            name: user.name,\n            role: user.role,\n            id: user.id\n          });\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Secure Chat Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 9\n      }, this), user && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"welcome-text\",\n          children: [\"Hello, \", user.name, \" (\", user.role, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 13\n        }, this), !showFileStorage && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"file-storage-button\",\n          onClick: () => setShowFileStorage(true),\n          children: \"File Storage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 15\n        }, this), showFileStorage && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"file-storage-button back\",\n          onClick: () => setShowFileStorage(false),\n          children: \"Back to Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-button\",\n          onClick: () => {\n            // Send logout notification to server\n            if (socket.connected) {\n              socket.emit('userLogout');\n            }\n            // Clear user data\n            setUser(null);\n            setMessages([]);\n            setUsers([]);\n            setSelectedUser(null);\n            setRoom(null);\n            setNotifications([]);\n            setUnreadCount({});\n            setShowFileStorage(false);\n          },\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 11\n      }, this), !connected && user && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-status offline\",\n        onClick: handleReconnect,\n        children: \"Disconnected - Click to reconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 11\n      }, this), notifications.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notifications-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"notifications-button\",\n          children: [\"Notifications (\", notifications.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notifications-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notifications-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Notifications\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: clearAllNotifications,\n              className: \"clear-notifications\",\n              children: \"Clear All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 15\n          }, this), notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-item\",\n            children: \"No new notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 17\n          }, this) : notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-item\",\n            children: [notification.type === 'newMessage' && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [notification.from, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 672,\n                columnNumber: 25\n              }, this), \" \", notification.preview]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 23\n            }, this), notification.type === 'newRoomMessage' && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [notification.room, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 677,\n                columnNumber: 25\n              }, this), \" \", notification.from, \": \", notification.preview]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 23\n            }, this), (notification.type === 'newFile' || notification.type === 'newRoomFile') && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [notification.type === 'newFile' ? notification.from : notification.room, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 682,\n                columnNumber: 25\n              }, this), notification.from, \" shared file: \", notification.fileName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => dismissNotification(notification.id),\n              className: \"dismiss-notification\",\n              children: \"\\u2715\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 686,\n              columnNumber: 21\n            }, this)]\n          }, notification.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 7\n    }, this), !user ?\n    /*#__PURE__*/\n    // Login form\n    _jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleJoin,\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Join the Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your name\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: role,\n          onChange: e => setRole(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"student\",\n            children: \"Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"lecturer\",\n            children: \"Lecturer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 9\n    }, this) : showFileStorage ?\n    /*#__PURE__*/\n    // File storage view\n    _jsxDEV(\"div\", {\n      className: \"file-storage-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-storage-tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `file-tab ${selectedUser === null && room === null ? 'active' : ''}`,\n          onClick: () => {\n            setSelectedUser(null);\n            setRoom(null);\n          },\n          children: \"All Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 13\n        }, this), Object.entries(roomsInfo).map(([roomKey, roomData]) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `file-tab ${room === roomKey ? 'active' : ''}`,\n          onClick: () => {\n            setRoom(roomKey);\n            setSelectedUser(null);\n          },\n          children: roomData.name || roomKey\n        }, roomKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-list\",\n        children: [getFiles().filter(file => {\n          if (!room && !selectedUser) return true; // All files\n          if (room && file.room === room) return true; // Files from specific room\n          if (selectedUser && (file.senderId === selectedUser.id && file.recipientId === socket.id || file.recipientId === selectedUser.id && file.senderId === socket.id)) {\n            return true; // Files from specific user chat\n          }\n          return false;\n        }).map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-item-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-item-name\",\n              children: file.fileData.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-item-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"file-item-size\",\n                children: [Math.round(file.fileData.size / 1024), \" KB\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 768,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"file-item-from\",\n                children: file.room ? `Shared in ${file.room}` : file.senderId === socket.id ? `Sent to ${file.recipientName}` : `Received from ${file.sender}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 769,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"file-item-date\",\n                children: new Date(file.timestamp).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 777,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 767,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"download-button\",\n            onClick: () => handleFileDownload(file.fileData),\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 782,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 17\n        }, this)), getFiles().filter(file => {\n          if (!room && !selectedUser) return true;\n          if (room && file.room === room) return true;\n          if (selectedUser && (file.senderId === selectedUser.id && file.recipientId === socket.id || file.recipientId === selectedUser.id && file.senderId === socket.id)) {\n            return true;\n          }\n          return false;\n        }).length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-files\",\n          children: \"No files found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 724,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // Chat interface\n    _jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rooms-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Rooms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 810,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rooms-list\",\n            children: Object.entries(roomsInfo).length > 0 ? Object.entries(roomsInfo).map(([roomKey, roomData]) =>\n            // Only show rooms user has access to\n            roomData.allowedRoles && roomData.allowedRoles.includes(role) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `room ${room === roomKey ? 'active' : ''}`,\n              onClick: () => handleJoinRoom(roomKey),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"room-name\",\n                children: [roomData.name || roomKey, unreadCount[roomKey] > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"unread-badge\",\n                  children: unreadCount[roomKey]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 824,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 821,\n                columnNumber: 25\n              }, this), roomData.postingRoles && !roomData.postingRoles.includes(role) && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"read-only-label\",\n                children: \"Read-only\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 828,\n                columnNumber: 27\n              }, this)]\n            }, roomKey, true, {\n              fileName: _jsxFileName,\n              lineNumber: 816,\n              columnNumber: 23\n            }, this)) :\n            /*#__PURE__*/\n            // Fallback for when roomsInfo is not available yet\n            _jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `room ${room === 'general' ? 'active' : ''}`,\n                onClick: () => handleJoinRoom('general'),\n                children: [\"General\", unreadCount['general'] > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"unread-badge\",\n                  children: unreadCount['general']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 841,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 835,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `room ${room === 'assignments' ? 'active' : ''}`,\n                onClick: () => handleJoinRoom('assignments'),\n                children: [\"Assignments\", unreadCount['assignments'] > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"unread-badge\",\n                  children: unreadCount['assignments']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 850,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 844,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `room ${room === 'announcements' ? 'active' : ''}`,\n                onClick: () => handleJoinRoom('announcements'),\n                children: [\"Announcements\", unreadCount['announcements'] > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"unread-badge\",\n                  children: unreadCount['announcements']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 859,\n                  columnNumber: 27\n                }, this), role !== 'lecturer' && role !== 'admin' && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"read-only-label\",\n                  children: \"Read-only\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 862,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 853,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 811,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"users-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 872,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"users-list\",\n            children: [users.filter(u => u.id !== socket.id).map(u => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `user ${(selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) === u.id ? 'active' : ''} ${u.offline ? 'offline' : ''}`,\n              onClick: () => handleSelectUser(u),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"user-name\",\n                  children: u.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 881,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"user-role\",\n                  children: u.role\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 882,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 880,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-status\",\n                children: [unreadCount[u.id] > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"unread-badge\",\n                  children: unreadCount[u.id]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 886,\n                  columnNumber: 25\n                }, this), u.offline && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"offline-indicator\",\n                  children: \"Offline\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 889,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 884,\n                columnNumber: 21\n              }, this)]\n            }, u.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 875,\n              columnNumber: 19\n            }, this)), users.length <= 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-users\",\n              children: \"No other users online\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 895,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 873,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 808,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-chat\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: selectedUser ? /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Chat with \", selectedUser.name, selectedUser.offline && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"user-offline-status\",\n              children: \" (Offline)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 907,\n              columnNumber: 44\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 905,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Room: \", ((_roomsInfo$room = roomsInfo[room]) === null || _roomsInfo$room === void 0 ? void 0 : _roomsInfo$room.name) || room, room && ((_roomsInfo$room2 = roomsInfo[room]) === null || _roomsInfo$room2 === void 0 ? void 0 : _roomsInfo$room2.postingRoles) && !roomsInfo[room].postingRoles.includes(role) && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"read-only-header\",\n              children: \" (Read-only)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 913,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 910,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 903,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-container\",\n          children: [messages.filter(msg => {\n            // Filter messages based on current view (direct or room)\n            if (selectedUser) {\n              return msg.senderId === selectedUser.id && msg.recipientId === socket.id || msg.recipientId === selectedUser.id && msg.senderId === socket.id;\n            } else {\n              // System messages should only show in the specified room\n              if (msg.system) {\n                return msg.room === room;\n              }\n              return msg.room === room;\n            }\n          }).map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.system ? 'system-message' : msg.senderId === socket.id ? 'my-message' : 'other-message'}`,\n            children: [!msg.system && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"sender\",\n                children: msg.sender\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 942,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"role\",\n                children: msg.role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 943,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"time\",\n                children: new Date(msg.timestamp).toLocaleTimeString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 944,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 941,\n              columnNumber: 23\n            }, this), !msg.system && msg.isFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-attachment\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-name\",\n                  children: msg.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 954,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-size\",\n                  children: [Math.round(msg.fileData.size / 1024), \" KB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 955,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 953,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"download-button\",\n                onClick: () => handleFileDownload(msg.fileData),\n                children: \"Download\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 959,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 952,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-text\",\n              children: msg.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 967,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 935,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 971,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 919,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSendMessage,\n          className: \"message-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"attachment-button\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"file-upload\",\n              className: `file-label ${!connected || room && (_roomsInfo$room3 = roomsInfo[room]) !== null && _roomsInfo$room3 !== void 0 && _roomsInfo$room3.postingRoles && !roomsInfo[room].postingRoles.includes(role) ? 'disabled' : ''}`,\n              children: [\"\\uD83D\\uDCCE\", /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"file-upload\",\n                type: \"file\",\n                onChange: handleFileUpload,\n                style: {\n                  display: 'none'\n                },\n                disabled: !connected || room && ((_roomsInfo$room4 = roomsInfo[room]) === null || _roomsInfo$room4 === void 0 ? void 0 : _roomsInfo$room4.postingRoles) && !roomsInfo[room].postingRoles.includes(role)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 981,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 976,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 975,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: !connected ? \"Reconnecting...\" : room && (_roomsInfo$room5 = roomsInfo[room]) !== null && _roomsInfo$room5 !== void 0 && _roomsInfo$room5.postingRoles && !roomsInfo[room].postingRoles.includes(role) ? \"Read-only channel\" : `Message ${selectedUser ? selectedUser.name : room}...`,\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            disabled: !connected || room && ((_roomsInfo$room6 = roomsInfo[room]) === null || _roomsInfo$room6 === void 0 ? void 0 : _roomsInfo$room6.postingRoles) && !roomsInfo[room].postingRoles.includes(role)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 990,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !connected || !message.trim() || room && ((_roomsInfo$room7 = roomsInfo[room]) === null || _roomsInfo$room7 === void 0 ? void 0 : _roomsInfo$room7.postingRoles) && !roomsInfo[room].postingRoles.includes(role),\n            className: !connected || !message.trim() || room && (_roomsInfo$room8 = roomsInfo[room]) !== null && _roomsInfo$room8 !== void 0 && _roomsInfo$room8.postingRoles && !roomsInfo[room].postingRoles.includes(role) ? 'disabled' : '',\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1002,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 974,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 902,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 806,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 604,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"U7N4p3PTa9vslisZ/IfUTKbyeUw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","timeout","App","_s","_roomsInfo$room","_roomsInfo$room2","_roomsInfo$room3","_roomsInfo$room4","_roomsInfo$room5","_roomsInfo$room6","_roomsInfo$room7","_roomsInfo$room8","user","setUser","message","setMessage","messages","setMessages","name","setName","role","setRole","users","setUsers","selectedUser","setSelectedUser","room","setRoom","roomsInfo","setRoomsInfo","connected","setConnected","notifications","setNotifications","unreadCount","setUnreadCount","showFileStorage","setShowFileStorage","messagesEndRef","notificationSound","current","Audio","load","error","console","log","scrollToBottom","_messagesEndRef$curre","scrollIntoView","behavior","Notification","permission","requestPermission","getFiles","filter","msg","isFile","playNotificationSound","playPromise","play","undefined","catch","e","showBrowserNotification","title","body","document","hidden","icon","on","emit","id","data","rooms","alert","off","messagesData","length","prevMessages","existingIds","Set","map","m","messageId","newMessages","has","combinedMessages","sort","a","b","Date","timestamp","messageData","some","senderId","recipientId","prev","key","fileData","confirmation","fileMessage","text","sender","toISOString","type","size","recipientName","notification","from","now","preview","fileName","usersList","userData","prevUsers","exists","u","system","offline","handleJoin","preventDefault","trim","handleJoinRoom","roomName","handleSelectUser","handleSendMessage","postingRoles","includes","join","toString","Math","random","substr","handleFileUpload","file","target","files","reader","FileReader","onload","event","base64Data","result","readAsDataURL","handleFileDownload","link","createElement","href","download","appendChild","click","removeChild","dismissNotification","clearAllNotifications","handleReconnect","connect","once","className","children","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","placeholder","value","onChange","required","Object","entries","roomKey","roomData","index","round","toLocaleString","allowedRoles","toLocaleTimeString","ref","htmlFor","style","display","disabled","_c","$RefreshReg$"],"sources":["C:/Users/han_m/OneDrive/Documents/gitProjects/secure_chat_project/web-client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\n\n// Connect to the server\nconst socket = io('http://localhost:5000', {\n  reconnection: true,\n  reconnectionAttempts: 10,\n  reconnectionDelay: 1000,\n  reconnectionDelayMax: 5000,\n  timeout: 20000\n});\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [name, setName] = useState('');\n  const [role, setRole] = useState('student');\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [room, setRoom] = useState('general');\n  const [roomsInfo, setRoomsInfo] = useState({});\n  const [connected, setConnected] = useState(socket.connected);\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState({});\n  const [showFileStorage, setShowFileStorage] = useState(false);\n  const messagesEndRef = useRef(null);\n  const notificationSound = useRef(null);\n\n  // Initialize notification sound with error handling\n  useEffect(() => {\n    try {\n      notificationSound.current = new Audio('/notification.mp3');\n      notificationSound.current.load(); // Preload the sound file\n    } catch (error) {\n      console.log('Error initializing notification sound:', error);\n    }\n  }, []);\n\n  // Auto-scroll to the bottom of messages\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Setup browser notifications\n  useEffect(() => {\n    // Request notification permission\n    if (Notification.permission !== 'granted' && Notification.permission !== 'denied') {\n      Notification.requestPermission();\n    }\n  }, []);\n\n  // Get files for the file storage page\n  const getFiles = () => {\n    return messages.filter(msg => msg.isFile);\n  };\n\n  // Play notification sound with better error handling\n  const playNotificationSound = () => {\n    if (!notificationSound.current) return;\n    \n    try {\n      const playPromise = notificationSound.current.play();\n      if (playPromise !== undefined) {\n        playPromise.catch(e => console.log('Error playing sound:', e));\n      }\n    } catch (error) {\n      console.log('Error playing notification sound:', error);\n    }\n  };\n\n  // Show browser notification\n  const showBrowserNotification = (title, body) => {\n    if (Notification.permission === 'granted' && document.hidden) {\n      try {\n        new Notification(title, {\n          body: body,\n          icon: '/favicon.ico'\n        });\n      } catch (error) {\n        console.log('Error showing notification:', error);\n      }\n    }\n  };\n\n  // Socket event listeners for connection status\n  useEffect(() => {\n    // Handle connection status\n    socket.on('connect', () => {\n      console.log('Connected to server');\n      setConnected(true);\n      \n      // If user was already logged in, try to reconnect\n      if (user) {\n        socket.emit('reconnect', {\n          name: user.name,\n          role: user.role,\n          id: user.id\n        });\n      }\n    });\n\n    socket.on('disconnect', () => {\n      console.log('Disconnected from server');\n      setConnected(false);\n    });\n\n    socket.on('connect_error', (error) => {\n      console.log('Connection error:', error.message);\n      setConnected(false);\n    });\n\n    // Handle reconnection success\n    socket.on('reconnected', (data) => {\n      console.log('Reconnected successfully');\n    });\n\n    // Handle room info\n    socket.on('roomsInfo', (rooms) => {\n      setRoomsInfo(rooms);\n    });\n\n    // Handle server ping to keep connection alive\n    socket.on('ping', () => {\n      socket.emit('pong');\n    });\n\n    // Handle errors\n    socket.on('error', (error) => {\n      alert(error.message);\n    });\n\n    return () => {\n      socket.off('connect');\n      socket.off('disconnect');\n      socket.off('connect_error');\n      socket.off('reconnected');\n      socket.off('roomsInfo');\n      socket.off('ping');\n      socket.off('error');\n    };\n  }, [user]);\n\n  // Handle message history loading\n  useEffect(() => {\n    // Handle previous messages from server when reconnecting or logging in\n    socket.on('previousMessages', (messagesData) => {\n      console.log('Received previous messages:', messagesData.length);\n      \n      setMessages(prevMessages => {\n        // Filter out duplicates by messageId\n        const existingIds = new Set(prevMessages.map(m => m.messageId));\n        const newMessages = messagesData.filter(m => !existingIds.has(m.messageId));\n        \n        // Combine existing and new messages, then sort by timestamp\n        const combinedMessages = [...prevMessages, ...newMessages];\n        return combinedMessages.sort((a, b) => \n          new Date(a.timestamp) - new Date(b.timestamp)\n        );\n      });\n    });\n\n    return () => {\n      socket.off('previousMessages');\n    };\n  }, []);\n\n  // Messaging and notifications socket events\n  useEffect(() => {\n    // Handle incoming messages\n    socket.on('message', (messageData) => {\n      console.log('Received message:', messageData);\n      \n      // Use functional form of setState to ensure working with the latest state\n      setMessages(prevMessages => {\n        // Check if this message already exists (avoid duplicates)\n        if (messageData.messageId && prevMessages.some(msg => msg.messageId === messageData.messageId)) {\n          return prevMessages;\n        }\n        return [...prevMessages, messageData];\n      });\n      \n      // Update unread count\n      if (messageData.room === room || \n         (messageData.senderId === selectedUser?.id && messageData.recipientId === socket.id) ||\n         (messageData.recipientId === selectedUser?.id && messageData.senderId === socket.id)) {\n        // Reset unread count for current chat\n        setUnreadCount(prev => ({\n          ...prev,\n          [messageData.room || messageData.senderId]: 0\n        }));\n      } else if (messageData.senderId !== socket.id) {\n        // Increment unread count for other chats\n        const key = messageData.room || messageData.senderId;\n        setUnreadCount(prev => ({\n          ...prev,\n          [key]: (prev[key] || 0) + 1\n        }));\n      }\n    });\n\n    // Handle file sharing\n    socket.on('fileShared', (fileData) => {\n      console.log('Received file shared event:', fileData);\n      \n      // Only process if it's meant for this user\n      if (fileData.recipientId && fileData.recipientId !== socket.id) return;\n      if (fileData.room && fileData.room !== room && fileData.senderId !== socket.id) return;\n      \n      // For direct messages sent by the current user, we've already added them locally\n      if (fileData.confirmation && fileData.senderId === socket.id) return;\n      \n      // Ensure file data is properly formatted\n      const fileMessage = {\n        text: `Shared file: ${fileData.name}`,\n        sender: fileData.sender,\n        senderId: fileData.senderId,\n        role: fileData.role || 'unknown',\n        timestamp: fileData.timestamp || new Date().toISOString(),\n        isFile: true,\n        messageId: fileData.messageId,\n        fileData: {\n          name: fileData.name,\n          type: fileData.type || 'application/octet-stream',\n          size: fileData.size || 0,\n          data: fileData.data\n        }\n      };\n      \n      if (fileData.recipientId) {\n        fileMessage.recipientId = fileData.recipientId;\n        fileMessage.recipientName = fileData.recipientName;\n      } else {\n        fileMessage.room = fileData.room;\n      }\n      \n      // Check if this message already exists\n      setMessages(prevMessages => {\n        if (fileData.messageId && prevMessages.some(msg => msg.messageId === fileData.messageId)) {\n          return prevMessages;\n        }\n        console.log('Adding file message to state:', fileMessage.text);\n        return [...prevMessages, fileMessage];\n      });\n      \n      // Update unread count for other chats\n      if (fileData.senderId !== socket.id && \n         ((fileData.room && fileData.room !== room) || \n          (fileData.senderId && selectedUser?.id !== fileData.senderId))) {\n        const key = fileData.room || fileData.senderId;\n        setUnreadCount(prev => ({\n          ...prev,\n          [key]: (prev[key] || 0) + 1\n        }));\n      }\n    });\n\n    // Handle notifications\n    socket.on('notification', (notification) => {\n      // Don't show notifications for the current room or selected user\n      if (notification.room && notification.room === room) return;\n      if (notification.from === selectedUser?.name) return;\n      \n      // Add to notifications list with required fields\n      setNotifications(prev => [\n        ...prev, \n        { \n          ...notification, \n          id: notification.id || Date.now(),\n          preview: notification.preview || 'New notification'\n        }\n      ]);\n      \n      // Play sound for all notifications\n      playNotificationSound();\n      \n      // Show browser notification based on type\n      switch (notification.type) {\n        case 'newMessage':\n          showBrowserNotification(\n            `New message from ${notification.from}`,\n            notification.preview || 'New message'\n          );\n          break;\n        case 'newRoomMessage':\n          showBrowserNotification(\n            `New message in ${notification.room}`,\n            `${notification.from}: ${notification.preview || 'New message'}`\n          );\n          break;\n        case 'newFile':\n          showBrowserNotification(\n            `New file from ${notification.from}`,\n            `Shared file: ${notification.fileName || 'File'}`\n          );\n          break;\n        case 'newRoomFile':\n          showBrowserNotification(\n            `New file in ${notification.room}`,\n            `${notification.from} shared file: ${notification.fileName || 'File'}`\n          );\n          break;\n        default:\n          break;\n      }\n    });\n\n    // Handle receiving user list\n    socket.on('usersList', (usersList) => {\n      setUsers(usersList);\n    });\n\n    // Handle user joining\n    socket.on('userJoined', (userData) => {\n      setUsers(prevUsers => {\n        // Check if user already exists\n        const exists = prevUsers.some(u => u.id === userData.id);\n        if (!exists) {\n          return [...prevUsers, userData];\n        }\n        return prevUsers;\n      });\n      \n      // Only add system message if it's for the correct room\n      setMessages(prevMessages => [\n        ...prevMessages,\n        {\n          system: true,\n          text: `${userData.name} joined the chat`,\n          timestamp: new Date().toISOString(),\n          room: userData.room || 'general' // Use the room from userData\n        }\n      ]);\n    });\n\n    // Handle user going offline\n    socket.on('userOffline', (userData) => {\n      setUsers(prevUsers => {\n        return prevUsers.map(user => {\n          if (user.id === userData.id) {\n            return { ...user, offline: true };\n          }\n          return user;\n        });\n      });\n      \n      setMessages(prevMessages => [\n        ...prevMessages,\n        {\n          system: true,\n          text: `${userData.name} went offline`,\n          timestamp: new Date().toISOString(),\n          room: 'general'\n        }\n      ]);\n    });\n\n    // Handle user leaving\n    socket.on('userLeft', (userData) => {\n      setUsers(prevUsers => prevUsers.filter(u => u.id !== userData.id));\n      \n      // Only add system message if it's for the correct room\n      setMessages(prevMessages => [\n        ...prevMessages,\n        {\n          system: true,\n          text: `${userData.name || 'A user'} left the chat`,\n          timestamp: new Date().toISOString(),\n          room: userData.room || 'general' // Use the room from userData\n        }\n      ]);\n      \n      // Clear selected user if they left\n      if (selectedUser && selectedUser.id === userData.id) {\n        setSelectedUser(null);\n        setRoom('general');\n      }\n    });\n\n    // Clean up on unmount\n    return () => {\n      socket.off('message');\n      socket.off('fileShared');\n      socket.off('notification');\n      socket.off('usersList');\n      socket.off('userJoined');\n      socket.off('userOffline');\n      socket.off('userLeft');\n    };\n  }, [selectedUser, room, socket.id]);\n\n  // Reset unread count when changing room or selected user\n  useEffect(() => {\n    if (room) {\n      setUnreadCount(prev => ({\n        ...prev,\n        [room]: 0\n      }));\n    } else if (selectedUser) {\n      setUnreadCount(prev => ({\n        ...prev,\n        [selectedUser.id]: 0\n      }));\n    }\n  }, [room, selectedUser]);\n\n  // Handle joining the chat\n  const handleJoin = (e) => {\n    e.preventDefault();\n    if (!name.trim()) return;\n\n    // Join the chat\n    const userData = { name, role };\n    socket.emit('join', userData);\n    setUser({ ...userData, id: socket.id });\n    \n    // Join general room by default\n    handleJoinRoom('general');\n  };\n\n  // Handle joining a room\n  const handleJoinRoom = (roomName) => {\n    socket.emit('joinRoom', roomName);\n    setRoom(roomName);\n    setSelectedUser(null);\n  };\n\n  // Handle selecting a user for direct message\n  const handleSelectUser = (selectedUser) => {\n    setSelectedUser(selectedUser);\n    setRoom(null);\n  };\n\n  // Handle sending messages\n  const handleSendMessage = (e) => {\n    e.preventDefault();\n    if (!message.trim() || !user) return;\n    \n    // Check if user has permission to post in this room\n    if (room && roomsInfo[room] && \n        roomsInfo[room].postingRoles && \n        !roomsInfo[room].postingRoles.includes(role)) {\n      alert(`Only ${roomsInfo[room].postingRoles.join(', ')} can post in ${roomsInfo[room].name}`);\n      return;\n    }\n\n    // Prepare message data\n    const messageData = {\n      text: message,\n      sender: user.name,\n      senderId: socket.id,\n      role: user.role,\n      timestamp: new Date().toISOString(),\n      messageId: Date.now().toString() + '-' + Math.random().toString(36).substr(2, 9)\n    };\n\n    // Add recipient or room information\n    if (selectedUser) {\n      messageData.recipientId = selectedUser.id;\n      messageData.recipientName = selectedUser.name;\n    } else {\n      messageData.room = room;\n    }\n\n    // Send the message\n    socket.emit('message', messageData);\n    \n    // Also add it immediately to our local state for better responsiveness\n    setMessages(prevMessages => [...prevMessages, messageData]);\n    \n    // Clear the input\n    setMessage('');\n  };\n  \n  // Handle file upload\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    \n    // Check if user has permission to post in this room\n    if (room && roomsInfo[room] && \n        roomsInfo[room].postingRoles && \n        !roomsInfo[room].postingRoles.includes(role)) {\n      alert(`Only ${roomsInfo[room].postingRoles.join(', ')} can post in ${roomsInfo[room].name}`);\n      return;\n    }\n    \n    // Limit file size to 5MB\n    if (file.size > 5 * 1024 * 1024) {\n      alert('File size exceeds 5MB limit');\n      return;\n    }\n    \n    // Create a reader to read the file\n    const reader = new FileReader();\n    \n    reader.onload = (event) => {\n      // Generate a unique message ID to track this upload\n      const messageId = Date.now().toString() + '-' + Math.random().toString(36).substr(2, 9);\n      \n      // File metadata to share with others\n      const fileData = {\n        name: file.name,\n        size: file.size,\n        type: file.type,\n        sender: user.name,\n        senderId: socket.id,\n        role: user.role,\n        timestamp: new Date().toISOString(),\n        messageId: messageId // Add a unique ID\n      };\n      \n      // Add recipient or room information\n      if (selectedUser) {\n        fileData.recipientId = selectedUser.id;\n        fileData.recipientName = selectedUser.name;\n      } else {\n        fileData.room = room;\n      }\n      \n      // Create a downloadable link for the file (base64 encoded)\n      const base64Data = event.target.result;\n      fileData.data = base64Data;\n      \n      // Send file notification through socket\n      socket.emit('fileShared', fileData);\n      \n      // Add file message to local messages\n      const fileMessage = {\n        text: `Shared file: ${file.name}`,\n        sender: user.name,\n        senderId: socket.id,\n        role: user.role,\n        timestamp: new Date().toISOString(),\n        isFile: true,\n        messageId: messageId,\n        fileData: {\n          name: file.name,\n          type: file.type,\n          size: file.size,\n          data: base64Data\n        }\n      };\n      \n      if (selectedUser) {\n        fileMessage.recipientId = selectedUser.id;\n        fileMessage.recipientName = selectedUser.name;\n      } else {\n        fileMessage.room = room;\n      }\n      \n      setMessages(prevMessages => [...prevMessages, fileMessage]);\n    };\n    \n    // Read file as data URL (base64)\n    reader.readAsDataURL(file);\n  };\n\n  // Handle file download\n  const handleFileDownload = (fileData) => {\n    // Create a link element\n    const link = document.createElement('a');\n    link.href = fileData.data;\n    link.download = fileData.name;\n    \n    // Append to body, click, and remove\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Dismiss a notification\n  const dismissNotification = (id) => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  };\n\n  // Clear all notifications\n  const clearAllNotifications = () => {\n    setNotifications([]);\n  };\n\n  // Handle reconnect button click\n  const handleReconnect = () => {\n    if (!connected) {\n      socket.connect();\n      if (user) {\n        socket.once('connect', () => {\n          socket.emit('reconnect', {\n            name: user.name,\n            role: user.role,\n            id: user.id\n          });\n        });\n      }\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Secure Chat Application</h1>\n        {user && (\n          <div className=\"user-info-header\">\n            <span className=\"welcome-text\">Hello, {user.name} ({user.role})</span>\n            {!showFileStorage && (\n              <button \n                className=\"file-storage-button\"\n                onClick={() => setShowFileStorage(true)}\n              >\n                File Storage\n              </button>\n            )}\n            {showFileStorage && (\n              <button \n                className=\"file-storage-button back\"\n                onClick={() => setShowFileStorage(false)}\n              >\n                Back to Chat\n              </button>\n            )}\n            <button \n              className=\"logout-button\"\n              onClick={() => {\n                // Send logout notification to server\n                if (socket.connected) {\n                  socket.emit('userLogout');\n                }\n                // Clear user data\n                setUser(null);\n                setMessages([]);\n                setUsers([]);\n                setSelectedUser(null);\n                setRoom(null);\n                setNotifications([]);\n                setUnreadCount({});\n                setShowFileStorage(false);\n              }}\n            >\n              Logout\n            </button>\n          </div>\n        )}\n        {!connected && user && (\n          <div className=\"connection-status offline\" onClick={handleReconnect}>\n            Disconnected - Click to reconnect\n          </div>\n        )}\n        {notifications.length > 0 && (\n          <div className=\"notifications-dropdown\">\n            <button className=\"notifications-button\">\n              Notifications ({notifications.length})\n            </button>\n            <div className=\"notifications-content\">\n              <div className=\"notifications-header\">\n                <h3>Notifications</h3>\n                <button onClick={clearAllNotifications} className=\"clear-notifications\">\n                  Clear All\n                </button>\n              </div>\n              {notifications.length === 0 ? (\n                <div className=\"notification-item\">No new notifications</div>\n              ) : (\n                notifications.map(notification => (\n                  <div key={notification.id} className=\"notification-item\">\n                    {notification.type === 'newMessage' && (\n                      <div>\n                        <strong>{notification.from}:</strong> {notification.preview}\n                      </div>\n                    )}\n                    {notification.type === 'newRoomMessage' && (\n                      <div>\n                        <strong>{notification.room}:</strong> {notification.from}: {notification.preview}\n                      </div>\n                    )}\n                    {(notification.type === 'newFile' || notification.type === 'newRoomFile') && (\n                      <div>\n                        <strong>{notification.type === 'newFile' ? notification.from : notification.room}:</strong> \n                        {notification.from} shared file: {notification.fileName}\n                      </div>\n                    )}\n                    <button \n                      onClick={() => dismissNotification(notification.id)}\n                      className=\"dismiss-notification\"\n                    >\n                      ✕\n                    </button>\n                  </div>\n                ))\n              )}\n            </div>\n          </div>\n        )}\n      </header>\n\n      {!user ? (\n        // Login form\n        <div className=\"login-container\">\n          <form onSubmit={handleJoin} className=\"login-form\">\n            <h2>Join the Chat</h2>\n            <input\n              type=\"text\"\n              placeholder=\"Enter your name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              required\n            />\n            <select \n              value={role} \n              onChange={(e) => setRole(e.target.value)}\n            >\n              <option value=\"student\">Student</option>\n              <option value=\"lecturer\">Lecturer</option>\n            </select>\n            <button type=\"submit\">Join</button>\n          </form>\n        </div>\n      ) : showFileStorage ? (\n        // File storage view\n        <div className=\"file-storage-container\">\n          <h2>My Files</h2>\n          \n          <div className=\"file-storage-tabs\">\n            <button \n              className={`file-tab ${selectedUser === null && room === null ? 'active' : ''}`}\n              onClick={() => {\n                setSelectedUser(null);\n                setRoom(null);\n              }}\n            >\n              All Files\n            </button>\n            {Object.entries(roomsInfo).map(([roomKey, roomData]) => (\n              <button \n                key={roomKey}\n                className={`file-tab ${room === roomKey ? 'active' : ''}`}\n                onClick={() => {\n                  setRoom(roomKey);\n                  setSelectedUser(null);\n                }}\n              >\n                {roomData.name || roomKey}\n              </button>\n            ))}\n          </div>\n          \n          <div className=\"file-list\">\n            {getFiles()\n              .filter(file => {\n                if (!room && !selectedUser) return true; // All files\n                if (room && file.room === room) return true; // Files from specific room\n                if (selectedUser && \n                    ((file.senderId === selectedUser.id && file.recipientId === socket.id) || \n                     (file.recipientId === selectedUser.id && file.senderId === socket.id))) {\n                  return true; // Files from specific user chat\n                }\n                return false;\n              })\n              .map((file, index) => (\n                <div key={index} className=\"file-item\">\n                  <div className=\"file-item-info\">\n                    <span className=\"file-item-name\">{file.fileData.name}</span>\n                    <div className=\"file-item-meta\">\n                      <span className=\"file-item-size\">{Math.round(file.fileData.size / 1024)} KB</span>\n                      <span className=\"file-item-from\">\n                        {file.room \n                          ? `Shared in ${file.room}`\n                          : file.senderId === socket.id \n                            ? `Sent to ${file.recipientName}`\n                            : `Received from ${file.sender}`\n                        }\n                      </span>\n                      <span className=\"file-item-date\">\n                        {new Date(file.timestamp).toLocaleString()}\n                      </span>\n                    </div>\n                  </div>\n                  <button \n                    className=\"download-button\"\n                    onClick={() => handleFileDownload(file.fileData)}\n                  >\n                    Download\n                  </button>\n                </div>\n              ))}\n            {getFiles().filter(file => {\n              if (!room && !selectedUser) return true;\n              if (room && file.room === room) return true;\n              if (selectedUser && \n                  ((file.senderId === selectedUser.id && file.recipientId === socket.id) || \n                   (file.recipientId === selectedUser.id && file.senderId === socket.id))) {\n                return true;\n              }\n              return false;\n            }).length === 0 && (\n              <div className=\"no-files\">No files found</div>\n            )}\n          </div>\n        </div>\n      ) : (\n        // Chat interface\n        <div className=\"chat-container\">\n          {/* Sidebar for users and rooms */}\n          <div className=\"sidebar\">\n            <div className=\"rooms-section\">\n              <h3>Rooms</h3>\n              <div className=\"rooms-list\">\n                {Object.entries(roomsInfo).length > 0 ? \n                  Object.entries(roomsInfo).map(([roomKey, roomData]) => \n                    // Only show rooms user has access to\n                    roomData.allowedRoles && roomData.allowedRoles.includes(role) && (\n                      <div \n                        key={roomKey}\n                        className={`room ${room === roomKey ? 'active' : ''}`}\n                        onClick={() => handleJoinRoom(roomKey)}\n                      >\n                        <span className=\"room-name\">\n                          {roomData.name || roomKey}\n                          {unreadCount[roomKey] > 0 && (\n                            <span className=\"unread-badge\">{unreadCount[roomKey]}</span>\n                          )}\n                        </span>\n                        {roomData.postingRoles && !roomData.postingRoles.includes(role) && (\n                          <span className=\"read-only-label\">Read-only</span>\n                        )}\n                      </div>\n                    )\n                  ) : (\n                    // Fallback for when roomsInfo is not available yet\n                    <>\n                      <div \n                        className={`room ${room === 'general' ? 'active' : ''}`}\n                        onClick={() => handleJoinRoom('general')}\n                      >\n                        General\n                        {unreadCount['general'] > 0 && (\n                          <span className=\"unread-badge\">{unreadCount['general']}</span>\n                        )}\n                      </div>\n                      <div \n                        className={`room ${room === 'assignments' ? 'active' : ''}`}\n                        onClick={() => handleJoinRoom('assignments')}\n                      >\n                        Assignments\n                        {unreadCount['assignments'] > 0 && (\n                          <span className=\"unread-badge\">{unreadCount['assignments']}</span>\n                        )}\n                      </div>\n                      <div \n                        className={`room ${room === 'announcements' ? 'active' : ''}`}\n                        onClick={() => handleJoinRoom('announcements')}\n                      >\n                        Announcements\n                        {unreadCount['announcements'] > 0 && (\n                          <span className=\"unread-badge\">{unreadCount['announcements']}</span>\n                        )}\n                        {role !== 'lecturer' && role !== 'admin' && (\n                          <span className=\"read-only-label\">Read-only</span>\n                        )}\n                      </div>\n                    </>\n                  )\n                }\n              </div>\n            </div>\n\n            <div className=\"users-section\">\n              <h3>Users</h3>\n              <div className=\"users-list\">\n                {users.filter(u => u.id !== socket.id).map(u => (\n                  <div \n                    key={u.id}\n                    className={`user ${selectedUser?.id === u.id ? 'active' : ''} ${u.offline ? 'offline' : ''}`}\n                    onClick={() => handleSelectUser(u)}\n                  >\n                    <div className=\"user-info\">\n                      <span className=\"user-name\">{u.name}</span>\n                      <span className=\"user-role\">{u.role}</span>\n                    </div>\n                    <div className=\"user-status\">\n                      {unreadCount[u.id] > 0 && (\n                        <span className=\"unread-badge\">{unreadCount[u.id]}</span>\n                      )}\n                      {u.offline && (\n                        <span className=\"offline-indicator\">Offline</span>\n                      )}\n                    </div>\n                  </div>\n                ))}\n                {users.length <= 1 && (\n                  <div className=\"no-users\">No other users online</div>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Main chat area */}\n          <div className=\"main-chat\">\n            <div className=\"chat-header\">\n              {selectedUser ? (\n                <h2>\n                  Chat with {selectedUser.name}\n                  {selectedUser.offline && <span className=\"user-offline-status\"> (Offline)</span>}\n                </h2>\n              ) : (\n                <h2>\n                  Room: {roomsInfo[room]?.name || room}\n                  {room && roomsInfo[room]?.postingRoles && !roomsInfo[room].postingRoles.includes(role) && (\n                    <span className=\"read-only-header\"> (Read-only)</span>\n                  )}\n                </h2>\n              )}\n            </div>\n\n            <div className=\"messages-container\">\n              {messages\n                .filter(msg => {\n                  // Filter messages based on current view (direct or room)\n                  if (selectedUser) {\n                    return (msg.senderId === selectedUser.id && msg.recipientId === socket.id) || \n                           (msg.recipientId === selectedUser.id && msg.senderId === socket.id);\n                  } else {\n                    // System messages should only show in the specified room\n                    if (msg.system) {\n                      return msg.room === room;\n                    }\n                    return msg.room === room;\n                  }\n                })\n                .map((msg, index) => (\n                  <div \n                    key={index} \n                    className={`message ${msg.system ? 'system-message' : \n                      msg.senderId === socket.id ? 'my-message' : 'other-message'}`}\n                  >\n                    {!msg.system && (\n                      <div className=\"message-header\">\n                        <span className=\"sender\">{msg.sender}</span>\n                        <span className=\"role\">{msg.role}</span>\n                        <span className=\"time\">\n                          {new Date(msg.timestamp).toLocaleTimeString()}\n                        </span>\n                      </div>\n                    )}\n                    \n                    {/* Check if it's a file message or regular message */}\n                    {!msg.system && msg.isFile ? (\n                      <div className=\"file-attachment\">\n                        <div className=\"file-info\">\n                          <span className=\"file-name\">{msg.text}</span>\n                          <span className=\"file-size\">\n                            {Math.round(msg.fileData.size / 1024)} KB\n                          </span>\n                        </div>\n                        <button \n                          className=\"download-button\"\n                          onClick={() => handleFileDownload(msg.fileData)}\n                        >\n                          Download\n                        </button>\n                      </div>\n                    ) : (\n                      <div className=\"message-text\">{msg.text}</div>\n                    )}\n                  </div>\n                ))}\n              <div ref={messagesEndRef} />\n            </div>\n          \n            <form onSubmit={handleSendMessage} className=\"message-form\">\n              <div className=\"attachment-button\">\n                <label \n                  htmlFor=\"file-upload\" \n                  className={`file-label ${!connected || (room && roomsInfo[room]?.postingRoles && !roomsInfo[room].postingRoles.includes(role)) ? 'disabled' : ''}`}\n                >\n                  📎\n                  <input\n                    id=\"file-upload\"\n                    type=\"file\"\n                    onChange={handleFileUpload}\n                    style={{ display: 'none' }}\n                    disabled={!connected || (room && roomsInfo[room]?.postingRoles && !roomsInfo[room].postingRoles.includes(role))}\n                  />\n                </label>\n              </div>\n              <input\n                type=\"text\"\n                placeholder={\n                  !connected ? \"Reconnecting...\" : \n                  (room && roomsInfo[room]?.postingRoles && !roomsInfo[room].postingRoles.includes(role)) ?\n                  \"Read-only channel\" : \n                  `Message ${selectedUser ? selectedUser.name : room}...`\n                }\n                value={message}\n                onChange={(e) => setMessage(e.target.value)}\n                disabled={!connected || (room && roomsInfo[room]?.postingRoles && !roomsInfo[room].postingRoles.includes(role))}\n              />\n              <button \n                type=\"submit\"\n                disabled={!connected || !message.trim() || (room && roomsInfo[room]?.postingRoles && !roomsInfo[room].postingRoles.includes(role))}\n                className={!connected || !message.trim() || (room && roomsInfo[room]?.postingRoles && !roomsInfo[room].postingRoles.includes(role)) ? 'disabled' : ''}\n              >\n                Send\n              </button>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}