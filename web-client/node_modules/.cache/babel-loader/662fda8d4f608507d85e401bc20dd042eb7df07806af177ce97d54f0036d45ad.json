{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\han_m\\\\OneDrive\\\\Documents\\\\gitProjects\\\\secure_chat_project\\\\web-client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\n\n// Connect to the server\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000', {\n  reconnection: true,\n  reconnectionAttempts: 10,\n  reconnectionDelay: 1000,\n  reconnectionDelayMax: 5000,\n  timeout: 20000\n});\nfunction App() {\n  _s();\n  var _roomsInfo$room, _roomsInfo$room2, _roomsInfo$room3, _roomsInfo$room4, _roomsInfo$room5, _roomsInfo$room6, _roomsInfo$room7, _roomsInfo$room8;\n  const [user, setUser] = useState(null);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [name, setName] = useState('');\n  const [role, setRole] = useState('student');\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [room, setRoom] = useState('general');\n  const [roomsInfo, setRoomsInfo] = useState({});\n  const [connected, setConnected] = useState(socket.connected);\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState({});\n  const messagesEndRef = useRef(null);\n  const notificationSound = useRef(new Audio('/notification.mp3')); // Add an audio file to your public folder\n\n  // Auto-scroll to the bottom of messages\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Setup browser notifications\n  useEffect(() => {\n    // Request notification permission\n    if (Notification.permission !== 'granted' && Notification.permission !== 'denied') {\n      Notification.requestPermission();\n    }\n  }, []);\n\n  // Play notification sound\n  const playNotificationSound = () => {\n    try {\n      notificationSound.current.play().catch(e => console.log('Error playing sound:', e));\n    } catch (error) {\n      console.log('Error playing notification sound:', error);\n    }\n  };\n\n  // Show browser notification\n  const showBrowserNotification = (title, body) => {\n    if (Notification.permission === 'granted' && document.hidden) {\n      try {\n        new Notification(title, {\n          body: body,\n          icon: '/favicon.ico'\n        });\n      } catch (error) {\n        console.log('Error showing notification:', error);\n      }\n    }\n  };\n\n  // Socket event listeners\n  useEffect(() => {\n    // Handle connection status\n    socket.on('connect', () => {\n      console.log('Connected to server');\n      setConnected(true);\n\n      // If user was already logged in, try to reconnect\n      if (user) {\n        socket.emit('reconnect', {\n          name: user.name,\n          role: user.role,\n          id: user.id\n        });\n      }\n    });\n    socket.on('disconnect', () => {\n      console.log('Disconnected from server');\n      setConnected(false);\n    });\n    socket.on('connect_error', error => {\n      console.log('Connection error:', error.message);\n      setConnected(false);\n    });\n\n    // Handle reconnection success\n    socket.on('reconnected', data => {\n      console.log('Reconnected successfully');\n    });\n\n    // Handle room info\n    socket.on('roomsInfo', rooms => {\n      setRoomsInfo(rooms);\n    });\n\n    // Handle server ping to keep connection alive\n    socket.on('ping', () => {\n      socket.emit('pong');\n    });\n\n    // Handle errors\n    socket.on('error', error => {\n      alert(error.message);\n    });\n    return () => {\n      socket.off('connect');\n      socket.off('disconnect');\n      socket.off('connect_error');\n      socket.off('reconnected');\n      socket.off('roomsInfo');\n      socket.off('ping');\n      socket.off('error');\n    };\n  }, [user]);\n\n  // Messaging and notifications socket events\n  useEffect(() => {\n    // Handle incoming messages\n    socket.on('message', messageData => {\n      setMessages(prevMessages => [...prevMessages, messageData]);\n\n      // Reset unread count for this chat\n      if (messageData.room === room || messageData.senderId === (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) && messageData.recipientId === socket.id || messageData.recipientId === (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) && messageData.senderId === socket.id) {\n        setUnreadCount(prev => ({\n          ...prev,\n          [messageData.room || messageData.senderId]: 0\n        }));\n      }\n      // Increment unread count for other chats\n      else if (messageData.senderId !== socket.id) {\n        const key = messageData.room || messageData.senderId;\n        setUnreadCount(prev => ({\n          ...prev,\n          [key]: (prev[key] || 0) + 1\n        }));\n      }\n    });\n\n    // Handle file sharing\n    socket.on('fileShared', fileData => {\n      // Skip if it's just a confirmation\n      if (fileData.confirmation) return;\n\n      // Only process if it's meant for this user\n      if (fileData.recipientId && fileData.recipientId !== socket.id) return;\n      if (fileData.room && fileData.room !== room) return;\n\n      // For direct messages, only process the event if it's from the other person\n      if (fileData.recipientId && fileData.senderId === socket.id) return;\n\n      // Create a message for the file\n      const fileMessage = {\n        text: `Shared file: ${fileData.name}`,\n        sender: fileData.sender,\n        senderId: fileData.senderId,\n        role: fileData.role,\n        timestamp: fileData.timestamp,\n        isFile: true,\n        messageId: fileData.messageId,\n        fileData: {\n          name: fileData.name,\n          type: fileData.type,\n          size: fileData.size,\n          data: fileData.data\n        }\n      };\n      if (fileData.recipientId) {\n        fileMessage.recipientId = fileData.recipientId;\n        fileMessage.recipientName = fileData.recipientName;\n      } else {\n        fileMessage.room = fileData.room;\n      }\n\n      // Check if this message already exists\n      setMessages(prevMessages => {\n        if (fileData.messageId && prevMessages.some(msg => msg.messageId === fileData.messageId)) {\n          return prevMessages;\n        }\n        return [...prevMessages, fileMessage];\n      });\n\n      // Increment unread count for other chats\n      if (fileData.senderId !== socket.id && (fileData.room && fileData.room !== room || fileData.senderId && (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) !== fileData.senderId)) {\n        const key = fileData.room || fileData.senderId;\n        setUnreadCount(prev => ({\n          ...prev,\n          [key]: (prev[key] || 0) + 1\n        }));\n      }\n    });\n\n    // Handle notifications\n    socket.on('notification', notification => {\n      // Don't show notifications for the current room or selected user\n      if (notification.room && notification.room === room) return;\n      if (notification.from === (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.name)) return;\n\n      // Add to notifications list\n      setNotifications(prev => [...prev, {\n        ...notification,\n        id: Date.now()\n      }]);\n\n      // Play sound for all notifications\n      playNotificationSound();\n\n      // Show browser notification based on type\n      switch (notification.type) {\n        case 'newMessage':\n          showBrowserNotification(`New message from ${notification.from}`, notification.preview);\n          break;\n        case 'newRoomMessage':\n          showBrowserNotification(`New message in ${notification.room}`, `${notification.from}: ${notification.preview}`);\n          break;\n        case 'newFile':\n          showBrowserNotification(`New file from ${notification.from}`, `Shared file: ${notification.fileName}`);\n          break;\n        case 'newRoomFile':\n          showBrowserNotification(`New file in ${notification.room}`, `${notification.from} shared file: ${notification.fileName}`);\n          break;\n      }\n    });\n\n    // Handle receiving user list\n    socket.on('usersList', usersList => {\n      setUsers(usersList);\n    });\n\n    // Handle user joining\n    socket.on('userJoined', userData => {\n      setUsers(prevUsers => {\n        // Check if user already exists\n        const exists = prevUsers.some(u => u.id === userData.id);\n        if (!exists) {\n          return [...prevUsers, userData];\n        }\n        return prevUsers;\n      });\n      setMessages(prevMessages => [...prevMessages, {\n        system: true,\n        text: `${userData.name} joined the chat`,\n        timestamp: new Date().toISOString()\n      }]);\n    });\n\n    // Handle user going offline\n    socket.on('userOffline', userData => {\n      setUsers(prevUsers => {\n        return prevUsers.map(user => {\n          if (user.id === userData.id) {\n            return {\n              ...user,\n              offline: true\n            };\n          }\n          return user;\n        });\n      });\n      setMessages(prevMessages => [...prevMessages, {\n        system: true,\n        text: `${userData.name} went offline`,\n        timestamp: new Date().toISOString()\n      }]);\n    });\n\n    // Handle user leaving\n    socket.on('userLeft', userData => {\n      setUsers(prevUsers => prevUsers.filter(u => u.id !== userData.id));\n      setMessages(prevMessages => [...prevMessages, {\n        system: true,\n        text: `${userData.name || 'A user'} left the chat`,\n        timestamp: new Date().toISOString()\n      }]);\n\n      // Clear selected user if they left\n      if (selectedUser && selectedUser.id === userData.id) {\n        setSelectedUser(null);\n        setRoom('general');\n      }\n    });\n\n    // Clean up on unmount\n    return () => {\n      socket.off('message');\n      socket.off('fileShared');\n      socket.off('notification');\n      socket.off('usersList');\n      socket.off('userJoined');\n      socket.off('userOffline');\n      socket.off('userLeft');\n    };\n  }, [selectedUser, room, socket.id]);\n\n  // Reset unread count when changing room or selected user\n  useEffect(() => {\n    if (room) {\n      setUnreadCount(prev => ({\n        ...prev,\n        [room]: 0\n      }));\n    } else if (selectedUser) {\n      setUnreadCount(prev => ({\n        ...prev,\n        [selectedUser.id]: 0\n      }));\n    }\n  }, [room, selectedUser]);\n\n  // Handle joining the chat\n  const handleJoin = e => {\n    e.preventDefault();\n    if (!name.trim()) return;\n\n    // Join the chat\n    const userData = {\n      name,\n      role\n    };\n    socket.emit('join', userData);\n    setUser({\n      ...userData,\n      id: socket.id\n    });\n\n    // Join general room by default\n    handleJoinRoom('general');\n  };\n\n  // Handle joining a room\n  const handleJoinRoom = roomName => {\n    socket.emit('joinRoom', roomName);\n    setRoom(roomName);\n    setSelectedUser(null);\n  };\n\n  // Handle selecting a user for direct message\n  const handleSelectUser = selectedUser => {\n    setSelectedUser(selectedUser);\n    setRoom(null);\n  };\n\n  // Handle sending messages\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (!message.trim() || !user) return;\n\n    // Check if user has permission to post in this room\n    if (room && roomsInfo[room] && roomsInfo[room].postingRoles && !roomsInfo[room].postingRoles.includes(role)) {\n      alert(`Only ${roomsInfo[room].postingRoles.join(', ')} can post in ${roomsInfo[room].name}`);\n      return;\n    }\n\n    // Prepare message data\n    const messageData = {\n      text: message,\n      sender: user.name,\n      senderId: socket.id,\n      role: user.role,\n      timestamp: new Date().toISOString(),\n      messageId: Date.now().toString() + '-' + Math.random().toString(36).substr(2, 9)\n    };\n\n    // Add recipient or room information\n    if (selectedUser) {\n      messageData.recipientId = selectedUser.id;\n      messageData.recipientName = selectedUser.name;\n    } else {\n      messageData.room = room;\n    }\n\n    // Send the message\n    socket.emit('message', messageData);\n    setMessage('');\n  };\n\n  // Handle file upload\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n\n    // Check if user has permission to post in this room\n    if (room && roomsInfo[room] && roomsInfo[room].postingRoles && !roomsInfo[room].postingRoles.includes(role)) {\n      alert(`Only ${roomsInfo[room].postingRoles.join(', ')} can post in ${roomsInfo[room].name}`);\n      return;\n    }\n\n    // Limit file size to 5MB\n    if (file.size > 5 * 1024 * 1024) {\n      alert('File size exceeds 5MB limit');\n      return;\n    }\n\n    // Create a reader to read the file\n    const reader = new FileReader();\n    reader.onload = event => {\n      // Generate a unique message ID to track this upload\n      const messageId = Date.now().toString() + '-' + Math.random().toString(36).substr(2, 9);\n\n      // File metadata to share with others\n      const fileData = {\n        name: file.name,\n        size: file.size,\n        type: file.type,\n        sender: user.name,\n        senderId: socket.id,\n        role: user.role,\n        timestamp: new Date().toISOString(),\n        messageId: messageId // Add a unique ID\n      };\n\n      // Add recipient or room information\n      if (selectedUser) {\n        fileData.recipientId = selectedUser.id;\n        fileData.recipientName = selectedUser.name;\n      } else {\n        fileData.room = room;\n      }\n\n      // Create a downloadable link for the file (base64 encoded)\n      const base64Data = event.target.result;\n      fileData.data = base64Data;\n\n      // Send file notification through socket\n      socket.emit('fileShared', fileData);\n\n      // Add file message to local messages ONLY if it's not a room message\n      // For room messages, we'll let the server echo back to everyone including the sender\n      if (selectedUser) {\n        const fileMessage = {\n          text: `Shared file: ${file.name}`,\n          sender: user.name,\n          senderId: socket.id,\n          role: user.role,\n          timestamp: new Date().toISOString(),\n          isFile: true,\n          messageId: messageId,\n          fileData: {\n            name: file.name,\n            type: file.type,\n            size: file.size,\n            data: base64Data\n          }\n        };\n        fileMessage.recipientId = selectedUser.id;\n        fileMessage.recipientName = selectedUser.name;\n        setMessages(prevMessages => [...prevMessages, fileMessage]);\n      }\n    };\n\n    // Read file as data URL (base64)\n    reader.readAsDataURL(file);\n  };\n\n  // Handle file download\n  const handleFileDownload = fileData => {\n    // Create a link element\n    const link = document.createElement('a');\n    link.href = fileData.data;\n    link.download = fileData.name;\n\n    // Append to body, click, and remove\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Dismiss a notification\n  const dismissNotification = id => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  };\n\n  // Clear all notifications\n  const clearAllNotifications = () => {\n    setNotifications([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Secure Chat Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }, this), !connected && user && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-status offline\",\n        children: \"Disconnected - Click to reconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 11\n      }, this), notifications.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notifications-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"notifications-button\",\n          children: [\"Notifications (\", notifications.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notifications-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notifications-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Notifications\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: clearAllNotifications,\n              className: \"clear-notifications\",\n              children: \"Clear All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 15\n          }, this), notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-item\",\n            children: [notification.type === 'newMessage' && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [notification.from, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 23\n              }, this), \" \", notification.preview]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 21\n            }, this), notification.type === 'newRoomMessage' && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [notification.room, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 541,\n                columnNumber: 23\n              }, this), \" \", notification.from, \": \", notification.preview]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 21\n            }, this), (notification.type === 'newFile' || notification.type === 'newRoomFile') && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [notification.type === 'newFile' ? notification.from : notification.room, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 23\n              }, this), notification.from, \" shared file: \", notification.fileName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => dismissNotification(notification.id),\n              className: \"dismiss-notification\",\n              children: \"\\u2715\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 19\n            }, this)]\n          }, notification.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 7\n    }, this), !user ?\n    /*#__PURE__*/\n    // Login form\n    _jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleJoin,\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Join the Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your name\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: role,\n          onChange: e => setRole(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"student\",\n            children: \"Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"lecturer\",\n            children: \"Lecturer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // Chat interface\n    _jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rooms-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Rooms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rooms-list\",\n            children: Object.entries(roomsInfo).length > 0 ? Object.entries(roomsInfo).map(([roomKey, roomData]) =>\n            // Only show rooms user has access to\n            roomData.allowedRoles && roomData.allowedRoles.includes(role) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `room ${room === roomKey ? 'active' : ''}`,\n              onClick: () => handleJoinRoom(roomKey),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"room-name\",\n                children: [roomData.name || roomKey, unreadCount[roomKey] > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"unread-badge\",\n                  children: unreadCount[roomKey]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 605,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 602,\n                columnNumber: 25\n              }, this), roomData.postingRoles && !roomData.postingRoles.includes(role) && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"read-only-label\",\n                children: \"Read-only\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 27\n              }, this)]\n            }, roomKey, true, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 23\n            }, this)) :\n            /*#__PURE__*/\n            // Fallback for when roomsInfo is not available yet\n            _jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `room ${room === 'general' ? 'active' : ''}`,\n                onClick: () => handleJoinRoom('general'),\n                children: [\"General\", unreadCount['general'] > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"unread-badge\",\n                  children: unreadCount['general']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 622,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `room ${room === 'assignments' ? 'active' : ''}`,\n                onClick: () => handleJoinRoom('assignments'),\n                children: [\"Assignments\", unreadCount['assignments'] > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"unread-badge\",\n                  children: unreadCount['assignments']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 631,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `room ${room === 'announcements' ? 'active' : ''}`,\n                onClick: () => handleJoinRoom('announcements'),\n                children: [\"Announcements\", unreadCount['announcements'] > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"unread-badge\",\n                  children: unreadCount['announcements']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 640,\n                  columnNumber: 27\n                }, this), role !== 'lecturer' && role !== 'admin' && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"read-only-label\",\n                  children: \"Read-only\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 643,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 634,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"users-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"users-list\",\n            children: [users.filter(u => u.id !== socket.id).map(u => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `user ${(selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) === u.id ? 'active' : ''} ${u.offline ? 'offline' : ''}`,\n              onClick: () => handleSelectUser(u),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"user-name\",\n                  children: u.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 662,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"user-role\",\n                  children: u.role\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 663,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 21\n              }, this), unreadCount[u.id] > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"unread-badge\",\n                children: unreadCount[u.id]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 666,\n                columnNumber: 23\n              }, this), u.offline && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"offline-indicator\",\n                children: \"Offline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 669,\n                columnNumber: 23\n              }, this)]\n            }, u.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 19\n            }, this)), users.length <= 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-users\",\n              children: \"No other users online\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 674,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-chat\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: selectedUser ? /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Chat with \", selectedUser.name, selectedUser.offline && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"user-offline-status\",\n              children: \" (Offline)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 686,\n              columnNumber: 44\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Room: \", ((_roomsInfo$room = roomsInfo[room]) === null || _roomsInfo$room === void 0 ? void 0 : _roomsInfo$room.name) || room, room && ((_roomsInfo$room2 = roomsInfo[room]) === null || _roomsInfo$room2 === void 0 ? void 0 : _roomsInfo$room2.postingRoles) && !roomsInfo[room].postingRoles.includes(role) && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"read-only-header\",\n              children: \" (Read-only)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 692,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-container\",\n          children: [messages.filter(msg => {\n            // Filter messages based on current view (direct or room)\n            if (selectedUser) {\n              return msg.senderId === selectedUser.id && msg.recipientId === socket.id || msg.recipientId === selectedUser.id && msg.senderId === socket.id;\n            } else {\n              return msg.room === room || msg.system && !msg.room;\n            }\n          }).map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.system ? 'system-message' : msg.senderId === socket.id ? 'my-message' : 'other-message'}`,\n            children: [!msg.system && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"sender\",\n                children: msg.sender\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 717,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"role\",\n                children: msg.role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 718,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"time\",\n                children: new Date(msg.timestamp).toLocaleTimeString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 719,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 716,\n              columnNumber: 23\n            }, this), !msg.system && msg.isFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-attachment\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-name\",\n                  children: msg.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 729,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-size\",\n                  children: [Math.round(msg.fileData.size / 1024), \" KB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 730,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 728,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"download-button\",\n                onClick: () => handleFileDownload(msg.fileData),\n                children: \"Download\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 734,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 727,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-text\",\n              children: msg.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 710,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 746,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSendMessage,\n          className: \"message-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"attachment-button\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"file-upload\",\n              className: `file-label ${!connected || room && (_roomsInfo$room3 = roomsInfo[room]) !== null && _roomsInfo$room3 !== void 0 && _roomsInfo$room3.postingRoles && !roomsInfo[room].postingRoles.includes(role) ? 'disabled' : ''}`,\n              children: [\"\\uD83D\\uDCCE\", /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"file-upload\",\n                type: \"file\",\n                onChange: handleFileUpload,\n                style: {\n                  display: 'none'\n                },\n                disabled: !connected || room && ((_roomsInfo$room4 = roomsInfo[room]) === null || _roomsInfo$room4 === void 0 ? void 0 : _roomsInfo$room4.postingRoles) && !roomsInfo[room].postingRoles.includes(role)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 756,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 751,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: !connected ? \"Reconnecting...\" : room && (_roomsInfo$room5 = roomsInfo[room]) !== null && _roomsInfo$room5 !== void 0 && _roomsInfo$room5.postingRoles && !roomsInfo[room].postingRoles.includes(role) ? \"Read-only channel\" : `Message ${selectedUser ? selectedUser.name : room}...`,\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            disabled: !connected || room && ((_roomsInfo$room6 = roomsInfo[room]) === null || _roomsInfo$room6 === void 0 ? void 0 : _roomsInfo$room6.postingRoles) && !roomsInfo[room].postingRoles.includes(role)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !connected || !message.trim() || room && ((_roomsInfo$room7 = roomsInfo[room]) === null || _roomsInfo$room7 === void 0 ? void 0 : _roomsInfo$room7.postingRoles) && !roomsInfo[room].postingRoles.includes(role),\n            className: !connected || !message.trim() || room && (_roomsInfo$room8 = roomsInfo[room]) !== null && _roomsInfo$room8 !== void 0 && _roomsInfo$room8.postingRoles && !roomsInfo[room].postingRoles.includes(role) ? 'disabled' : '',\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 514,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NJ+Kg8kJDIlZcEb0jUpvhMspEkQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","timeout","App","_s","_roomsInfo$room","_roomsInfo$room2","_roomsInfo$room3","_roomsInfo$room4","_roomsInfo$room5","_roomsInfo$room6","_roomsInfo$room7","_roomsInfo$room8","user","setUser","message","setMessage","messages","setMessages","name","setName","role","setRole","users","setUsers","selectedUser","setSelectedUser","room","setRoom","roomsInfo","setRoomsInfo","connected","setConnected","notifications","setNotifications","unreadCount","setUnreadCount","messagesEndRef","notificationSound","Audio","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","Notification","permission","requestPermission","playNotificationSound","play","catch","e","console","log","error","showBrowserNotification","title","body","document","hidden","icon","on","emit","id","data","rooms","alert","off","messageData","prevMessages","senderId","recipientId","prev","key","fileData","confirmation","fileMessage","text","sender","timestamp","isFile","messageId","type","size","recipientName","some","msg","notification","from","Date","now","preview","fileName","usersList","userData","prevUsers","exists","u","system","toISOString","map","offline","filter","handleJoin","preventDefault","trim","handleJoinRoom","roomName","handleSelectUser","handleSendMessage","postingRoles","includes","join","toString","Math","random","substr","handleFileUpload","file","target","files","reader","FileReader","onload","event","base64Data","result","readAsDataURL","handleFileDownload","link","createElement","href","download","appendChild","click","removeChild","dismissNotification","clearAllNotifications","className","children","_jsxFileName","lineNumber","columnNumber","length","onClick","onSubmit","placeholder","value","onChange","required","Object","entries","roomKey","roomData","allowedRoles","index","toLocaleTimeString","round","ref","htmlFor","style","display","disabled","_c","$RefreshReg$"],"sources":["C:/Users/han_m/OneDrive/Documents/gitProjects/secure_chat_project/web-client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\n\n// Connect to the server\nconst socket = io('http://localhost:5000', {\n  reconnection: true,\n  reconnectionAttempts: 10,\n  reconnectionDelay: 1000,\n  reconnectionDelayMax: 5000,\n  timeout: 20000\n});\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [name, setName] = useState('');\n  const [role, setRole] = useState('student');\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [room, setRoom] = useState('general');\n  const [roomsInfo, setRoomsInfo] = useState({});\n  const [connected, setConnected] = useState(socket.connected);\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState({});\n  const messagesEndRef = useRef(null);\n  const notificationSound = useRef(new Audio('/notification.mp3')); // Add an audio file to your public folder\n\n  // Auto-scroll to the bottom of messages\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Setup browser notifications\n  useEffect(() => {\n    // Request notification permission\n    if (Notification.permission !== 'granted' && Notification.permission !== 'denied') {\n      Notification.requestPermission();\n    }\n  }, []);\n\n  // Play notification sound\n  const playNotificationSound = () => {\n    try {\n      notificationSound.current.play().catch(e => console.log('Error playing sound:', e));\n    } catch (error) {\n      console.log('Error playing notification sound:', error);\n    }\n  };\n\n  // Show browser notification\n  const showBrowserNotification = (title, body) => {\n    if (Notification.permission === 'granted' && document.hidden) {\n      try {\n        new Notification(title, {\n          body: body,\n          icon: '/favicon.ico'\n        });\n      } catch (error) {\n        console.log('Error showing notification:', error);\n      }\n    }\n  };\n\n  // Socket event listeners\n  useEffect(() => {\n    // Handle connection status\n    socket.on('connect', () => {\n      console.log('Connected to server');\n      setConnected(true);\n      \n      // If user was already logged in, try to reconnect\n      if (user) {\n        socket.emit('reconnect', {\n          name: user.name,\n          role: user.role,\n          id: user.id\n        });\n      }\n    });\n\n    socket.on('disconnect', () => {\n      console.log('Disconnected from server');\n      setConnected(false);\n    });\n\n    socket.on('connect_error', (error) => {\n      console.log('Connection error:', error.message);\n      setConnected(false);\n    });\n\n    // Handle reconnection success\n    socket.on('reconnected', (data) => {\n      console.log('Reconnected successfully');\n    });\n\n    // Handle room info\n    socket.on('roomsInfo', (rooms) => {\n      setRoomsInfo(rooms);\n    });\n\n    // Handle server ping to keep connection alive\n    socket.on('ping', () => {\n      socket.emit('pong');\n    });\n\n    // Handle errors\n    socket.on('error', (error) => {\n      alert(error.message);\n    });\n\n    return () => {\n      socket.off('connect');\n      socket.off('disconnect');\n      socket.off('connect_error');\n      socket.off('reconnected');\n      socket.off('roomsInfo');\n      socket.off('ping');\n      socket.off('error');\n    };\n  }, [user]);\n\n  // Messaging and notifications socket events\n  useEffect(() => {\n    // Handle incoming messages\n    socket.on('message', (messageData) => {\n      setMessages(prevMessages => [...prevMessages, messageData]);\n      \n      // Reset unread count for this chat\n      if (messageData.room === room || \n         (messageData.senderId === selectedUser?.id && messageData.recipientId === socket.id) ||\n         (messageData.recipientId === selectedUser?.id && messageData.senderId === socket.id)) {\n        setUnreadCount(prev => ({\n          ...prev,\n          [messageData.room || messageData.senderId]: 0\n        }));\n      } \n      // Increment unread count for other chats\n      else if (messageData.senderId !== socket.id) {\n        const key = messageData.room || messageData.senderId;\n        setUnreadCount(prev => ({\n          ...prev,\n          [key]: (prev[key] || 0) + 1\n        }));\n      }\n    });\n\n    // Handle file sharing\n    socket.on('fileShared', (fileData) => {\n      // Skip if it's just a confirmation\n      if (fileData.confirmation) return;\n      \n      // Only process if it's meant for this user\n      if (fileData.recipientId && fileData.recipientId !== socket.id) return;\n      if (fileData.room && fileData.room !== room) return;\n      \n      // For direct messages, only process the event if it's from the other person\n      if (fileData.recipientId && fileData.senderId === socket.id) return;\n      \n      // Create a message for the file\n      const fileMessage = {\n        text: `Shared file: ${fileData.name}`,\n        sender: fileData.sender,\n        senderId: fileData.senderId,\n        role: fileData.role,\n        timestamp: fileData.timestamp,\n        isFile: true,\n        messageId: fileData.messageId,\n        fileData: {\n          name: fileData.name,\n          type: fileData.type,\n          size: fileData.size,\n          data: fileData.data\n        }\n      };\n      \n      if (fileData.recipientId) {\n        fileMessage.recipientId = fileData.recipientId;\n        fileMessage.recipientName = fileData.recipientName;\n      } else {\n        fileMessage.room = fileData.room;\n      }\n      \n      // Check if this message already exists\n      setMessages(prevMessages => {\n        if (fileData.messageId && prevMessages.some(msg => msg.messageId === fileData.messageId)) {\n          return prevMessages;\n        }\n        return [...prevMessages, fileMessage];\n      });\n      \n      // Increment unread count for other chats\n      if (fileData.senderId !== socket.id && \n         ((fileData.room && fileData.room !== room) || \n          (fileData.senderId && selectedUser?.id !== fileData.senderId))) {\n        const key = fileData.room || fileData.senderId;\n        setUnreadCount(prev => ({\n          ...prev,\n          [key]: (prev[key] || 0) + 1\n        }));\n      }\n    });\n\n    // Handle notifications\n    socket.on('notification', (notification) => {\n      // Don't show notifications for the current room or selected user\n      if (notification.room && notification.room === room) return;\n      if (notification.from === selectedUser?.name) return;\n      \n      // Add to notifications list\n      setNotifications(prev => [...prev, { ...notification, id: Date.now() }]);\n      \n      // Play sound for all notifications\n      playNotificationSound();\n      \n      // Show browser notification based on type\n      switch (notification.type) {\n        case 'newMessage':\n          showBrowserNotification(\n            `New message from ${notification.from}`,\n            notification.preview\n          );\n          break;\n        case 'newRoomMessage':\n          showBrowserNotification(\n            `New message in ${notification.room}`,\n            `${notification.from}: ${notification.preview}`\n          );\n          break;\n        case 'newFile':\n          showBrowserNotification(\n            `New file from ${notification.from}`,\n            `Shared file: ${notification.fileName}`\n          );\n          break;\n        case 'newRoomFile':\n          showBrowserNotification(\n            `New file in ${notification.room}`,\n            `${notification.from} shared file: ${notification.fileName}`\n          );\n          break;\n      }\n    });\n\n    // Handle receiving user list\n    socket.on('usersList', (usersList) => {\n      setUsers(usersList);\n    });\n\n    // Handle user joining\n    socket.on('userJoined', (userData) => {\n      setUsers(prevUsers => {\n        // Check if user already exists\n        const exists = prevUsers.some(u => u.id === userData.id);\n        if (!exists) {\n          return [...prevUsers, userData];\n        }\n        return prevUsers;\n      });\n      \n      setMessages(prevMessages => [\n        ...prevMessages,\n        {\n          system: true,\n          text: `${userData.name} joined the chat`,\n          timestamp: new Date().toISOString()\n        }\n      ]);\n    });\n\n    // Handle user going offline\n    socket.on('userOffline', (userData) => {\n      setUsers(prevUsers => {\n        return prevUsers.map(user => {\n          if (user.id === userData.id) {\n            return { ...user, offline: true };\n          }\n          return user;\n        });\n      });\n      \n      setMessages(prevMessages => [\n        ...prevMessages,\n        {\n          system: true,\n          text: `${userData.name} went offline`,\n          timestamp: new Date().toISOString()\n        }\n      ]);\n    });\n\n    // Handle user leaving\n    socket.on('userLeft', (userData) => {\n      setUsers(prevUsers => prevUsers.filter(u => u.id !== userData.id));\n      \n      setMessages(prevMessages => [\n        ...prevMessages,\n        {\n          system: true,\n          text: `${userData.name || 'A user'} left the chat`,\n          timestamp: new Date().toISOString()\n        }\n      ]);\n      \n      // Clear selected user if they left\n      if (selectedUser && selectedUser.id === userData.id) {\n        setSelectedUser(null);\n        setRoom('general');\n      }\n    });\n\n// Clean up on unmount\n    return () => {\n      socket.off('message');\n      socket.off('fileShared');\n      socket.off('notification');\n      socket.off('usersList');\n      socket.off('userJoined');\n      socket.off('userOffline');\n      socket.off('userLeft');\n    };\n  }, [selectedUser, room, socket.id]);\n\n  // Reset unread count when changing room or selected user\n  useEffect(() => {\n    if (room) {\n      setUnreadCount(prev => ({\n        ...prev,\n        [room]: 0\n      }));\n    } else if (selectedUser) {\n      setUnreadCount(prev => ({\n        ...prev,\n        [selectedUser.id]: 0\n      }));\n    }\n  }, [room, selectedUser]);\n\n  // Handle joining the chat\n  const handleJoin = (e) => {\n    e.preventDefault();\n    if (!name.trim()) return;\n\n    // Join the chat\n    const userData = { name, role };\n    socket.emit('join', userData);\n    setUser({ ...userData, id: socket.id });\n    \n    // Join general room by default\n    handleJoinRoom('general');\n  };\n\n  // Handle joining a room\n  const handleJoinRoom = (roomName) => {\n    socket.emit('joinRoom', roomName);\n    setRoom(roomName);\n    setSelectedUser(null);\n  };\n\n  // Handle selecting a user for direct message\n  const handleSelectUser = (selectedUser) => {\n    setSelectedUser(selectedUser);\n    setRoom(null);\n  };\n\n  // Handle sending messages\n  const handleSendMessage = (e) => {\n    e.preventDefault();\n    if (!message.trim() || !user) return;\n    \n    // Check if user has permission to post in this room\n    if (room && roomsInfo[room] && \n        roomsInfo[room].postingRoles && \n        !roomsInfo[room].postingRoles.includes(role)) {\n      alert(`Only ${roomsInfo[room].postingRoles.join(', ')} can post in ${roomsInfo[room].name}`);\n      return;\n    }\n\n    // Prepare message data\n    const messageData = {\n      text: message,\n      sender: user.name,\n      senderId: socket.id,\n      role: user.role,\n      timestamp: new Date().toISOString(),\n      messageId: Date.now().toString() + '-' + Math.random().toString(36).substr(2, 9)\n    };\n\n    // Add recipient or room information\n    if (selectedUser) {\n      messageData.recipientId = selectedUser.id;\n      messageData.recipientName = selectedUser.name;\n    } else {\n      messageData.room = room;\n    }\n\n    // Send the message\n    socket.emit('message', messageData);\n    setMessage('');\n  };\n  \n  // Handle file upload\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    \n    // Check if user has permission to post in this room\n    if (room && roomsInfo[room] && \n        roomsInfo[room].postingRoles && \n        !roomsInfo[room].postingRoles.includes(role)) {\n      alert(`Only ${roomsInfo[room].postingRoles.join(', ')} can post in ${roomsInfo[room].name}`);\n      return;\n    }\n    \n    // Limit file size to 5MB\n    if (file.size > 5 * 1024 * 1024) {\n      alert('File size exceeds 5MB limit');\n      return;\n    }\n    \n    // Create a reader to read the file\n    const reader = new FileReader();\n    \n    reader.onload = (event) => {\n      // Generate a unique message ID to track this upload\n      const messageId = Date.now().toString() + '-' + Math.random().toString(36).substr(2, 9);\n      \n      // File metadata to share with others\n      const fileData = {\n        name: file.name,\n        size: file.size,\n        type: file.type,\n        sender: user.name,\n        senderId: socket.id,\n        role: user.role,\n        timestamp: new Date().toISOString(),\n        messageId: messageId // Add a unique ID\n      };\n      \n      // Add recipient or room information\n      if (selectedUser) {\n        fileData.recipientId = selectedUser.id;\n        fileData.recipientName = selectedUser.name;\n      } else {\n        fileData.room = room;\n      }\n      \n      // Create a downloadable link for the file (base64 encoded)\n      const base64Data = event.target.result;\n      fileData.data = base64Data;\n      \n      // Send file notification through socket\n      socket.emit('fileShared', fileData);\n      \n      // Add file message to local messages ONLY if it's not a room message\n      // For room messages, we'll let the server echo back to everyone including the sender\n      if (selectedUser) {\n        const fileMessage = {\n          text: `Shared file: ${file.name}`,\n          sender: user.name,\n          senderId: socket.id,\n          role: user.role,\n          timestamp: new Date().toISOString(),\n          isFile: true,\n          messageId: messageId,\n          fileData: {\n            name: file.name,\n            type: file.type,\n            size: file.size,\n            data: base64Data\n          }\n        };\n        \n        fileMessage.recipientId = selectedUser.id;\n        fileMessage.recipientName = selectedUser.name;\n        \n        setMessages(prevMessages => [...prevMessages, fileMessage]);\n      }\n    };\n    \n    // Read file as data URL (base64)\n    reader.readAsDataURL(file);\n  };\n\n  // Handle file download\n  const handleFileDownload = (fileData) => {\n    // Create a link element\n    const link = document.createElement('a');\n    link.href = fileData.data;\n    link.download = fileData.name;\n    \n    // Append to body, click, and remove\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Dismiss a notification\n  const dismissNotification = (id) => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  };\n\n  // Clear all notifications\n  const clearAllNotifications = () => {\n    setNotifications([]);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Secure Chat Application</h1>\n        {!connected && user && (\n          <div className=\"connection-status offline\">Disconnected - Click to reconnect</div>\n        )}\n        {notifications.length > 0 && (\n          <div className=\"notifications-dropdown\">\n            <button className=\"notifications-button\">\n              Notifications ({notifications.length})\n            </button>\n            <div className=\"notifications-content\">\n              <div className=\"notifications-header\">\n                <h3>Notifications</h3>\n                <button onClick={clearAllNotifications} className=\"clear-notifications\">\n                  Clear All\n                </button>\n              </div>\n              {notifications.map(notification => (\n                <div key={notification.id} className=\"notification-item\">\n                  {notification.type === 'newMessage' && (\n                    <div>\n                      <strong>{notification.from}:</strong> {notification.preview}\n                    </div>\n                  )}\n                  {notification.type === 'newRoomMessage' && (\n                    <div>\n                      <strong>{notification.room}:</strong> {notification.from}: {notification.preview}\n                    </div>\n                  )}\n                  {(notification.type === 'newFile' || notification.type === 'newRoomFile') && (\n                    <div>\n                      <strong>{notification.type === 'newFile' ? notification.from : notification.room}:</strong> \n                      {notification.from} shared file: {notification.fileName}\n                    </div>\n                  )}\n                  <button \n                    onClick={() => dismissNotification(notification.id)}\n                    className=\"dismiss-notification\"\n                  >\n                    ✕\n                  </button>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </header>\n\n      {!user ? (\n        // Login form\n        <div className=\"login-container\">\n          <form onSubmit={handleJoin} className=\"login-form\">\n            <h2>Join the Chat</h2>\n            <input\n              type=\"text\"\n              placeholder=\"Enter your name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              required\n            />\n            <select \n              value={role} \n              onChange={(e) => setRole(e.target.value)}\n            >\n              <option value=\"student\">Student</option>\n              <option value=\"lecturer\">Lecturer</option>\n            </select>\n            <button type=\"submit\">Join</button>\n          </form>\n        </div>\n      ) : (\n        // Chat interface\n        <div className=\"chat-container\">\n          {/* Sidebar for users and rooms */}\n          <div className=\"sidebar\">\n            <div className=\"rooms-section\">\n              <h3>Rooms</h3>\n              <div className=\"rooms-list\">\n                {Object.entries(roomsInfo).length > 0 ? \n                  Object.entries(roomsInfo).map(([roomKey, roomData]) => \n                    // Only show rooms user has access to\n                    roomData.allowedRoles && roomData.allowedRoles.includes(role) && (\n                      <div \n                        key={roomKey}\n                        className={`room ${room === roomKey ? 'active' : ''}`}\n                        onClick={() => handleJoinRoom(roomKey)}\n                      >\n                        <span className=\"room-name\">\n                          {roomData.name || roomKey}\n                          {unreadCount[roomKey] > 0 && (\n                            <span className=\"unread-badge\">{unreadCount[roomKey]}</span>\n                          )}\n                        </span>\n                        {roomData.postingRoles && !roomData.postingRoles.includes(role) && (\n                          <span className=\"read-only-label\">Read-only</span>\n                        )}\n                      </div>\n                    )\n                  ) : (\n                    // Fallback for when roomsInfo is not available yet\n                    <>\n                      <div \n                        className={`room ${room === 'general' ? 'active' : ''}`}\n                        onClick={() => handleJoinRoom('general')}\n                      >\n                        General\n                        {unreadCount['general'] > 0 && (\n                          <span className=\"unread-badge\">{unreadCount['general']}</span>\n                        )}\n                      </div>\n                      <div \n                        className={`room ${room === 'assignments' ? 'active' : ''}`}\n                        onClick={() => handleJoinRoom('assignments')}\n                      >\n                        Assignments\n                        {unreadCount['assignments'] > 0 && (\n                          <span className=\"unread-badge\">{unreadCount['assignments']}</span>\n                        )}\n                      </div>\n                      <div \n                        className={`room ${room === 'announcements' ? 'active' : ''}`}\n                        onClick={() => handleJoinRoom('announcements')}\n                      >\n                        Announcements\n                        {unreadCount['announcements'] > 0 && (\n                          <span className=\"unread-badge\">{unreadCount['announcements']}</span>\n                        )}\n                        {role !== 'lecturer' && role !== 'admin' && (\n                          <span className=\"read-only-label\">Read-only</span>\n                        )}\n                      </div>\n                    </>\n                  )\n                }\n              </div>\n            </div>\n\n            <div className=\"users-section\">\n              <h3>Users</h3>\n              <div className=\"users-list\">\n                {users.filter(u => u.id !== socket.id).map(u => (\n                  <div \n                    key={u.id}\n                    className={`user ${selectedUser?.id === u.id ? 'active' : ''} ${u.offline ? 'offline' : ''}`}\n                    onClick={() => handleSelectUser(u)}\n                  >\n                    <div className=\"user-info\">\n                      <span className=\"user-name\">{u.name}</span>\n                      <span className=\"user-role\">{u.role}</span>\n                    </div>\n                    {unreadCount[u.id] > 0 && (\n                      <span className=\"unread-badge\">{unreadCount[u.id]}</span>\n                    )}\n                    {u.offline && (\n                      <span className=\"offline-indicator\">Offline</span>\n                    )}\n                  </div>\n                ))}\n                {users.length <= 1 && (\n                  <div className=\"no-users\">No other users online</div>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Main chat area */}\n          <div className=\"main-chat\">\n            <div className=\"chat-header\">\n              {selectedUser ? (\n                <h2>\n                  Chat with {selectedUser.name}\n                  {selectedUser.offline && <span className=\"user-offline-status\"> (Offline)</span>}\n                </h2>\n              ) : (\n                <h2>\n                  Room: {roomsInfo[room]?.name || room}\n                  {room && roomsInfo[room]?.postingRoles && !roomsInfo[room].postingRoles.includes(role) && (\n                    <span className=\"read-only-header\"> (Read-only)</span>\n                  )}\n                </h2>\n              )}\n            </div>\n\n            <div className=\"messages-container\">\n              {messages\n                .filter(msg => {\n                  // Filter messages based on current view (direct or room)\n                  if (selectedUser) {\n                    return (msg.senderId === selectedUser.id && msg.recipientId === socket.id) || \n                           (msg.recipientId === selectedUser.id && msg.senderId === socket.id);\n                  } else {\n                    return msg.room === room || (msg.system && !msg.room);\n                  }\n                })\n                .map((msg, index) => (\n                  <div \n                    key={index} \n                    className={`message ${msg.system ? 'system-message' : \n                      msg.senderId === socket.id ? 'my-message' : 'other-message'}`}\n                  >\n                    {!msg.system && (\n                      <div className=\"message-header\">\n                        <span className=\"sender\">{msg.sender}</span>\n                        <span className=\"role\">{msg.role}</span>\n                        <span className=\"time\">\n                          {new Date(msg.timestamp).toLocaleTimeString()}\n                        </span>\n                      </div>\n                    )}\n                    \n                    {/* Check if it's a file message or regular message */}\n                    {!msg.system && msg.isFile ? (\n                      <div className=\"file-attachment\">\n                        <div className=\"file-info\">\n                          <span className=\"file-name\">{msg.text}</span>\n                          <span className=\"file-size\">\n                            {Math.round(msg.fileData.size / 1024)} KB\n                          </span>\n                        </div>\n                        <button \n                          className=\"download-button\"\n                          onClick={() => handleFileDownload(msg.fileData)}\n                        >\n                          Download\n                        </button>\n                      </div>\n                    ) : (\n                      <div className=\"message-text\">{msg.text}</div>\n                    )}\n                  </div>\n                ))}\n              <div ref={messagesEndRef} />\n            </div>\n          \n            <form onSubmit={handleSendMessage} className=\"message-form\">\n              <div className=\"attachment-button\">\n                <label \n                  htmlFor=\"file-upload\" \n                  className={`file-label ${!connected || (room && roomsInfo[room]?.postingRoles && !roomsInfo[room].postingRoles.includes(role)) ? 'disabled' : ''}`}\n                >\n                  📎\n                  <input\n                    id=\"file-upload\"\n                    type=\"file\"\n                    onChange={handleFileUpload}\n                    style={{ display: 'none' }}\n                    disabled={!connected || (room && roomsInfo[room]?.postingRoles && !roomsInfo[room].postingRoles.includes(role))}\n                  />\n                </label>\n              </div>\n              <input\n                type=\"text\"\n                placeholder={\n                  !connected ? \"Reconnecting...\" : \n                  (room && roomsInfo[room]?.postingRoles && !roomsInfo[room].postingRoles.includes(role)) ?\n                  \"Read-only channel\" : \n                  `Message ${selectedUser ? selectedUser.name : room}...`\n                }\n                value={message}\n                onChange={(e) => setMessage(e.target.value)}\n                disabled={!connected || (room && roomsInfo[room]?.postingRoles && !roomsInfo[room].postingRoles.includes(role))}\n              />\n              <button \n                type=\"submit\"\n                disabled={!connected || !message.trim() || (room && roomsInfo[room]?.postingRoles && !roomsInfo[room].postingRoles.includes(role))}\n                className={!connected || !message.trim() || (room && roomsInfo[room]?.postingRoles && !roomsInfo[room].postingRoles.includes(role)) ? 'disabled' : ''}\n              >\n                Send\n              </button>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}