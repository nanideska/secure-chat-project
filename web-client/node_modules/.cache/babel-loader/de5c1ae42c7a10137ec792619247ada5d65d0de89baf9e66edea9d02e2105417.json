{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\han_m\\\\OneDrive\\\\Documents\\\\gitProjects\\\\secure_chat_project\\\\web-client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\n\n// Connect to the server\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000', {\n  reconnection: true,\n  reconnectionAttempts: 10,\n  reconnectionDelay: 1000,\n  reconnectionDelayMax: 5000,\n  timeout: 20000\n});\nfunction App() {\n  _s();\n  var _roomsInfo$room, _roomsInfo$room2, _roomsInfo$room3, _roomsInfo$room4, _roomsInfo$room5, _roomsInfo$room6, _roomsInfo$room7, _roomsInfo$room8;\n  const [user, setUser] = useState(null);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [name, setName] = useState('');\n  const [role, setRole] = useState('student');\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [room, setRoom] = useState('general');\n  const [roomsInfo, setRoomsInfo] = useState({});\n  const [connected, setConnected] = useState(socket.connected);\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState({});\n  const [showFileStorage, setShowFileStorage] = useState(false);\n  const messagesEndRef = useRef(null);\n  const notificationSound = useRef(new Audio('/notification.mp3')); // Add an audio file to your public folder\n\n  // Auto-scroll to the bottom of messages\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Setup browser notifications\n  useEffect(() => {\n    // Request notification permission\n    if (Notification.permission !== 'granted' && Notification.permission !== 'denied') {\n      Notification.requestPermission();\n    }\n  }, []);\n\n  // Get files for the file storage page\n  const getFiles = () => {\n    return messages.filter(msg => msg.isFile);\n  };\n\n  // Play notification sound\n  const playNotificationSound = () => {\n    try {\n      notificationSound.current.play().catch(e => console.log('Error playing sound:', e));\n    } catch (error) {\n      console.log('Error playing notification sound:', error);\n    }\n  };\n\n  // Show browser notification\n  const showBrowserNotification = (title, body) => {\n    if (Notification.permission === 'granted' && document.hidden) {\n      try {\n        new Notification(title, {\n          body: body,\n          icon: '/favicon.ico'\n        });\n      } catch (error) {\n        console.log('Error showing notification:', error);\n      }\n    }\n  };\n\n  // Socket event listeners\n  useEffect(() => {\n    // Handle connection status\n    socket.on('connect', () => {\n      console.log('Connected to server');\n      setConnected(true);\n\n      // If user was already logged in, try to reconnect\n      if (user) {\n        socket.emit('reconnect', {\n          name: user.name,\n          role: user.role,\n          id: user.id\n        });\n      }\n    });\n    socket.on('disconnect', () => {\n      console.log('Disconnected from server');\n      setConnected(false);\n    });\n    socket.on('connect_error', error => {\n      console.log('Connection error:', error.message);\n      setConnected(false);\n    });\n\n    // Handle reconnection success\n    socket.on('reconnected', data => {\n      console.log('Reconnected successfully');\n    });\n\n    // Handle room info\n    socket.on('roomsInfo', rooms => {\n      setRoomsInfo(rooms);\n    });\n\n    // Handle server ping to keep connection alive\n    socket.on('ping', () => {\n      socket.emit('pong');\n    });\n\n    // Handle errors\n    socket.on('error', error => {\n      alert(error.message);\n    });\n    return () => {\n      socket.off('connect');\n      socket.off('disconnect');\n      socket.off('connect_error');\n      socket.off('reconnected');\n      socket.off('roomsInfo');\n      socket.off('ping');\n      socket.off('error');\n    };\n  }, [user]);\n\n  // Messaging and notifications socket events\n  useEffect(() => {\n    // Handle incoming messages\n    socket.on('message', messageData => {\n      setMessages(prevMessages => [...prevMessages, messageData]);\n\n      // Reset unread count for this chat\n      if (messageData.room === room || messageData.senderId === (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) && messageData.recipientId === socket.id || messageData.recipientId === (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) && messageData.senderId === socket.id) {\n        setUnreadCount(prev => ({\n          ...prev,\n          [messageData.room || messageData.senderId]: 0\n        }));\n      }\n      // Increment unread count for other chats\n      else if (messageData.senderId !== socket.id) {\n        const key = messageData.room || messageData.senderId;\n        setUnreadCount(prev => ({\n          ...prev,\n          [key]: (prev[key] || 0) + 1\n        }));\n      }\n    });\n\n    // Handle file sharing\n    socket.on('fileShared', fileData => {\n      console.log('Received file shared event:', fileData);\n\n      // Only process if it's meant for this user\n      if (fileData.recipientId && fileData.recipientId !== socket.id) return;\n      if (fileData.room && fileData.room !== room) return;\n\n      // For direct messages sent by the current user, we've already added them locally\n      if (fileData.recipientId && fileData.senderId === socket.id) return;\n\n      // Ensure data is in the correct format for web display\n      let fileDataFormatted = fileData.data;\n\n      // Create a message for the file\n      const fileMessage = {\n        text: `Shared file: ${fileData.name}`,\n        sender: fileData.sender,\n        senderId: fileData.senderId,\n        role: fileData.role || 'unknown',\n        timestamp: fileData.timestamp || new Date().toISOString(),\n        isFile: true,\n        messageId: fileData.messageId,\n        fileData: {\n          name: fileData.name,\n          type: fileData.type || 'application/octet-stream',\n          size: fileData.size || 0,\n          data: fileDataFormatted\n        }\n      };\n      if (fileData.recipientId) {\n        fileMessage.recipientId = fileData.recipientId;\n        fileMessage.recipientName = fileData.recipientName;\n      } else {\n        fileMessage.room = fileData.room;\n      }\n\n      // Check if this message already exists\n      setMessages(prevMessages => {\n        if (fileData.messageId && prevMessages.some(msg => msg.messageId === fileData.messageId)) {\n          return prevMessages;\n        }\n        console.log('Adding file message to state:', fileMessage.text);\n        return [...prevMessages, fileMessage];\n      });\n\n      // Increment unread count for other chats\n      if (fileData.senderId !== socket.id && (fileData.room && fileData.room !== room || fileData.senderId && (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) !== fileData.senderId)) {\n        const key = fileData.room || fileData.senderId;\n        setUnreadCount(prev => ({\n          ...prev,\n          [key]: (prev[key] || 0) + 1\n        }));\n      }\n    });\n\n    // Handle notifications\n    socket.on('notification', notification => {\n      // Don't show notifications for the current room or selected user\n      if (notification.room && notification.room === room) return;\n      if (notification.from === (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.name)) return;\n\n      // Add to notifications list with required fields\n      setNotifications(prev => [...prev, {\n        ...notification,\n        id: Date.now(),\n        preview: notification.preview || 'New notification'\n      }]);\n\n      // Play sound for all notifications\n      playNotificationSound();\n\n      // Show browser notification based on type\n      switch (notification.type) {\n        case 'newMessage':\n          showBrowserNotification(`New message from ${notification.from}`, notification.preview || 'New message');\n          break;\n        case 'newRoomMessage':\n          showBrowserNotification(`New message in ${notification.room}`, `${notification.from}: ${notification.preview || 'New message'}`);\n          break;\n        case 'newFile':\n          showBrowserNotification(`New file from ${notification.from}`, `Shared file: ${notification.fileName || 'File'}`);\n          break;\n        case 'newRoomFile':\n          showBrowserNotification(`New file in ${notification.room}`, `${notification.from} shared file: ${notification.fileName || 'File'}`);\n          break;\n        default:\n          break;\n      }\n    });\n\n    // Handle receiving user list\n    socket.on('usersList', usersList => {\n      setUsers(usersList);\n    });\n\n    // Handle user joining\n    socket.on('userJoined', userData => {\n      setUsers(prevUsers => {\n        // Check if user already exists\n        const exists = prevUsers.some(u => u.id === userData.id);\n        if (!exists) {\n          return [...prevUsers, userData];\n        }\n        return prevUsers;\n      });\n\n      // Only add system message if it's for the correct room\n      setMessages(prevMessages => [...prevMessages, {\n        system: true,\n        text: `${userData.name} joined the chat`,\n        timestamp: new Date().toISOString(),\n        room: userData.room || 'general' // Use the room from userData\n      }]);\n    });\n\n    // Handle user going offline\n    socket.on('userOffline', userData => {\n      setUsers(prevUsers => {\n        return prevUsers.map(user => {\n          if (user.id === userData.id) {\n            return {\n              ...user,\n              offline: true\n            };\n          }\n          return user;\n        });\n      });\n      setMessages(prevMessages => [...prevMessages, {\n        system: true,\n        text: `${userData.name} went offline`,\n        timestamp: new Date().toISOString(),\n        room: 'general'\n      }]);\n    });\n\n    // Handle user leaving\n    socket.on('userLeft', userData => {\n      setUsers(prevUsers => prevUsers.filter(u => u.id !== userData.id));\n\n      // Only add system message if it's for the correct room\n      setMessages(prevMessages => [...prevMessages, {\n        system: true,\n        text: `${userData.name || 'A user'} left the chat`,\n        timestamp: new Date().toISOString(),\n        room: userData.room || 'general' // Use the room from userData\n      }]);\n\n      // Clear selected user if they left\n      if (selectedUser && selectedUser.id === userData.id) {\n        setSelectedUser(null);\n        setRoom('general');\n      }\n    });\n\n    // Clean up on unmount\n    return () => {\n      socket.off('message');\n      socket.off('fileShared');\n      socket.off('notification');\n      socket.off('usersList');\n      socket.off('userJoined');\n      socket.off('userOffline');\n      socket.off('userLeft');\n    };\n  }, [selectedUser, room, socket.id]);\n\n  // Reset unread count when changing room or selected user\n  useEffect(() => {\n    if (room) {\n      setUnreadCount(prev => ({\n        ...prev,\n        [room]: 0\n      }));\n    } else if (selectedUser) {\n      setUnreadCount(prev => ({\n        ...prev,\n        [selectedUser.id]: 0\n      }));\n    }\n  }, [room, selectedUser]);\n\n  // Handle joining the chat\n  const handleJoin = e => {\n    e.preventDefault();\n    if (!name.trim()) return;\n\n    // Join the chat\n    const userData = {\n      name,\n      role\n    };\n    socket.emit('join', userData);\n    setUser({\n      ...userData,\n      id: socket.id\n    });\n\n    // Join general room by default\n    handleJoinRoom('general');\n  };\n\n  // Handle joining a room\n  const handleJoinRoom = roomName => {\n    socket.emit('joinRoom', roomName);\n    setRoom(roomName);\n    setSelectedUser(null);\n  };\n\n  // Handle selecting a user for direct message\n  const handleSelectUser = selectedUser => {\n    setSelectedUser(selectedUser);\n    setRoom(null);\n  };\n\n  // Handle sending messages\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (!message.trim() || !user) return;\n\n    // Check if user has permission to post in this room\n    if (room && roomsInfo[room] && roomsInfo[room].postingRoles && !roomsInfo[room].postingRoles.includes(role)) {\n      alert(`Only ${roomsInfo[room].postingRoles.join(', ')} can post in ${roomsInfo[room].name}`);\n      return;\n    }\n\n    // Prepare message data\n    const messageData = {\n      text: message,\n      sender: user.name,\n      senderId: socket.id,\n      role: user.role,\n      timestamp: new Date().toISOString(),\n      messageId: Date.now().toString() + '-' + Math.random().toString(36).substr(2, 9)\n    };\n\n    // Add recipient or room information\n    if (selectedUser) {\n      messageData.recipientId = selectedUser.id;\n      messageData.recipientName = selectedUser.name;\n    } else {\n      messageData.room = room;\n    }\n\n    // Send the message\n    socket.emit('message', messageData);\n    setMessage('');\n  };\n\n  // Handle file upload\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n\n    // Check if user has permission to post in this room\n    if (room && roomsInfo[room] && roomsInfo[room].postingRoles && !roomsInfo[room].postingRoles.includes(role)) {\n      alert(`Only ${roomsInfo[room].postingRoles.join(', ')} can post in ${roomsInfo[room].name}`);\n      return;\n    }\n\n    // Limit file size to 5MB\n    if (file.size > 5 * 1024 * 1024) {\n      alert('File size exceeds 5MB limit');\n      return;\n    }\n\n    // Create a reader to read the file\n    const reader = new FileReader();\n    reader.onload = event => {\n      // Generate a unique message ID to track this upload\n      const messageId = Date.now().toString() + '-' + Math.random().toString(36).substr(2, 9);\n\n      // File metadata to share with others\n      const fileData = {\n        name: file.name,\n        size: file.size,\n        type: file.type,\n        sender: user.name,\n        senderId: socket.id,\n        role: user.role,\n        timestamp: new Date().toISOString(),\n        messageId: messageId // Add a unique ID\n      };\n\n      // Add recipient or room information\n      if (selectedUser) {\n        fileData.recipientId = selectedUser.id;\n        fileData.recipientName = selectedUser.name;\n      } else {\n        fileData.room = room;\n      }\n\n      // Create a downloadable link for the file (base64 encoded)\n      const base64Data = event.target.result;\n      fileData.data = base64Data;\n\n      // Send file notification through socket\n      socket.emit('fileShared', fileData);\n\n      // Add file message to local messages\n      const fileMessage = {\n        text: `Shared file: ${file.name}`,\n        sender: user.name,\n        senderId: socket.id,\n        role: user.role,\n        timestamp: new Date().toISOString(),\n        isFile: true,\n        messageId: messageId,\n        fileData: {\n          name: file.name,\n          type: file.type,\n          size: file.size,\n          data: base64Data\n        }\n      };\n      if (selectedUser) {\n        fileMessage.recipientId = selectedUser.id;\n        fileMessage.recipientName = selectedUser.name;\n      } else {\n        fileMessage.room = room;\n      }\n      setMessages(prevMessages => [...prevMessages, fileMessage]);\n    };\n\n    // Read file as data URL (base64)\n    reader.readAsDataURL(file);\n  };\n\n  // Handle file download\n  const handleFileDownload = fileData => {\n    // Create a link element\n    const link = document.createElement('a');\n    link.href = fileData.data;\n    link.download = fileData.name;\n\n    // Append to body, click, and remove\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Dismiss a notification\n  const dismissNotification = id => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  };\n\n  // Clear all notifications\n  const clearAllNotifications = () => {\n    setNotifications([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Secure Chat Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 9\n      }, this), user && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"welcome-text\",\n          children: [\"Hello, \", user.name, \" (\", user.role, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 13\n        }, this), !showFileStorage && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"file-storage-button\",\n          onClick: () => setShowFileStorage(true),\n          children: \"File Storage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 15\n        }, this), showFileStorage && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"file-storage-button back\",\n          onClick: () => setShowFileStorage(false),\n          children: \"Back to Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-button\",\n          onClick: () => {\n            // Send logout notification to server\n            if (socket.connected) {\n              socket.emit('userLogout');\n            }\n            // Clear user data\n            setUser(null);\n            setMessages([]);\n            setUsers([]);\n            setSelectedUser(null);\n            setRoom(null);\n            setNotifications([]);\n            setUnreadCount({});\n            setShowFileStorage(false);\n          },\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 11\n      }, this), !connected && user && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-status offline\",\n        children: \"Disconnected - Click to reconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 11\n      }, this), notifications.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notifications-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"notifications-button\",\n          children: [\"Notifications (\", notifications.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notifications-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notifications-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Notifications\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: clearAllNotifications,\n              className: \"clear-notifications\",\n              children: \"Clear All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 15\n          }, this), notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-item\",\n            children: \"No new notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 17\n          }, this) : notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-item\",\n            children: [notification.type === 'newMessage' && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [notification.from, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 25\n              }, this), \" \", notification.preview]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 23\n            }, this), notification.type === 'newRoomMessage' && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [notification.room, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 25\n              }, this), \" \", notification.from, \": \", notification.preview]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 23\n            }, this), (notification.type === 'newFile' || notification.type === 'newRoomFile') && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [notification.type === 'newFile' ? notification.from : notification.room, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 25\n              }, this), notification.from, \" shared file: \", notification.fileName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => dismissNotification(notification.id),\n              className: \"dismiss-notification\",\n              children: \"\\u2715\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 21\n            }, this)]\n          }, notification.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 7\n    }, this), !user ?\n    /*#__PURE__*/\n    // Login form\n    _jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleJoin,\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Join the Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your name\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: role,\n          onChange: e => setRole(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"student\",\n            children: \"Student\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"lecturer\",\n            children: \"Lecturer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 9\n    }, this) : showFileStorage ?\n    /*#__PURE__*/\n    // File storage view\n    _jsxDEV(\"div\", {\n      className: \"file-storage-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-storage-tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `file-tab ${selectedUser === null && room === null ? 'active' : ''}`,\n          onClick: () => {\n            setSelectedUser(null);\n            setRoom(null);\n          },\n          children: \"All Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 13\n        }, this), Object.entries(roomsInfo).map(([roomKey, roomData]) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `file-tab ${room === roomKey ? 'active' : ''}`,\n          onClick: () => {\n            setRoom(roomKey);\n            setSelectedUser(null);\n          },\n          children: roomData.name || roomKey\n        }, roomKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-list\",\n        children: [getFiles().filter(file => {\n          if (!room && !selectedUser) return true; // All files\n          if (room && file.room === room) return true; // Files from specific room\n          if (selectedUser && (file.senderId === selectedUser.id && file.recipientId === socket.id || file.recipientId === selectedUser.id && file.senderId === socket.id)) {\n            return true; // Files from specific user chat\n          }\n          return false;\n        }).map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-item-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"file-item-name\",\n              children: file.fileData.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-item-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"file-item-size\",\n                children: [Math.round(file.fileData.size / 1024), \" KB\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 700,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"file-item-from\",\n                children: file.room ? `Shared in ${file.room}` : file.senderId === socket.id ? `Sent to ${file.recipientName}` : `Received from ${file.sender}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 701,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"file-item-date\",\n                children: new Date(file.timestamp).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 709,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 699,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"download-button\",\n            onClick: () => handleFileDownload(file.fileData),\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 17\n        }, this)), getFiles().filter(file => {\n          if (!room && !selectedUser) return true;\n          if (room && file.room === room) return true;\n          if (selectedUser && (file.senderId === selectedUser.id && file.recipientId === socket.id || file.recipientId === selectedUser.id && file.senderId === socket.id)) {\n            return true;\n          }\n          return false;\n        }).length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-files\",\n          children: \"No files found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // Chat interface\n    _jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rooms-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Rooms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rooms-list\",\n            children: Object.entries(roomsInfo).length > 0 ? Object.entries(roomsInfo).map(([roomKey, roomData]) =>\n            // Only show rooms user has access to\n            roomData.allowedRoles && roomData.allowedRoles.includes(role) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `room ${room === roomKey ? 'active' : ''}`,\n              onClick: () => handleJoinRoom(roomKey),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"room-name\",\n                children: [roomData.name || roomKey, unreadCount[roomKey] > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"unread-badge\",\n                  children: unreadCount[roomKey]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 756,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 753,\n                columnNumber: 25\n              }, this), roomData.postingRoles && !roomData.postingRoles.includes(role) && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"read-only-label\",\n                children: \"Read-only\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 760,\n                columnNumber: 27\n              }, this)]\n            }, roomKey, true, {\n              fileName: _jsxFileName,\n              lineNumber: 748,\n              columnNumber: 23\n            }, this)) :\n            /*#__PURE__*/\n            // Fallback for when roomsInfo is not available yet\n            _jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `room ${room === 'general' ? 'active' : ''}`,\n                onClick: () => handleJoinRoom('general'),\n                children: [\"General\", unreadCount['general'] > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"unread-badge\",\n                  children: unreadCount['general']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 773,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 767,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `room ${room === 'assignments' ? 'active' : ''}`,\n                onClick: () => handleJoinRoom('assignments'),\n                children: [\"Assignments\", unreadCount['assignments'] > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"unread-badge\",\n                  children: unreadCount['assignments']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 782,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 776,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `room ${room === 'announcements' ? 'active' : ''}`,\n                onClick: () => handleJoinRoom('announcements'),\n                children: [\"Announcements\", unreadCount['announcements'] > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"unread-badge\",\n                  children: unreadCount['announcements']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 791,\n                  columnNumber: 27\n                }, this), role !== 'lecturer' && role !== 'admin' && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"read-only-label\",\n                  children: \"Read-only\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 794,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 785,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"users-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 804,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"users-list\",\n            children: [users.filter(u => u.id !== socket.id).map(u => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `user ${(selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id) === u.id ? 'active' : ''} ${u.offline ? 'offline' : ''}`,\n              onClick: () => handleSelectUser(u),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"user-name\",\n                  children: u.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 813,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"user-role\",\n                  children: u.role\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 814,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 812,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-status\",\n                children: [unreadCount[u.id] > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"unread-badge\",\n                  children: unreadCount[u.id]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 818,\n                  columnNumber: 25\n                }, this), u.offline && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"offline-indicator\",\n                  children: \"Offline\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 821,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 816,\n                columnNumber: 21\n              }, this)]\n            }, u.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 807,\n              columnNumber: 19\n            }, this)), users.length <= 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-users\",\n              children: \"No other users online\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 827,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 805,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-chat\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: selectedUser ? /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Chat with \", selectedUser.name, selectedUser.offline && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"user-offline-status\",\n              children: \" (Offline)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 839,\n              columnNumber: 44\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Room: \", ((_roomsInfo$room = roomsInfo[room]) === null || _roomsInfo$room === void 0 ? void 0 : _roomsInfo$room.name) || room, room && ((_roomsInfo$room2 = roomsInfo[room]) === null || _roomsInfo$room2 === void 0 ? void 0 : _roomsInfo$room2.postingRoles) && !roomsInfo[room].postingRoles.includes(role) && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"read-only-header\",\n              children: \" (Read-only)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 845,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 842,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-container\",\n          children: [messages.filter(msg => {\n            // Filter messages based on current view (direct or room)\n            if (selectedUser) {\n              return msg.senderId === selectedUser.id && msg.recipientId === socket.id || msg.recipientId === selectedUser.id && msg.senderId === socket.id;\n            } else {\n              // System messages should only show in the specified room\n              if (msg.system) {\n                return msg.room === room;\n              }\n              return msg.room === room;\n            }\n          }).map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.system ? 'system-message' : msg.senderId === socket.id ? 'my-message' : 'other-message'}`,\n            children: [!msg.system && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"sender\",\n                children: msg.sender\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 874,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"role\",\n                children: msg.role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 875,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"time\",\n                children: new Date(msg.timestamp).toLocaleTimeString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 876,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 873,\n              columnNumber: 23\n            }, this), !msg.system && msg.isFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-attachment\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-name\",\n                  children: msg.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 886,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-size\",\n                  children: [Math.round(msg.fileData.size / 1024), \" KB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 887,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 885,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"download-button\",\n                onClick: () => handleFileDownload(msg.fileData),\n                children: \"Download\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 891,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 884,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-text\",\n              children: msg.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 899,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 867,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 903,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 851,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSendMessage,\n          className: \"message-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"attachment-button\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"file-upload\",\n              className: `file-label ${!connected || room && (_roomsInfo$room3 = roomsInfo[room]) !== null && _roomsInfo$room3 !== void 0 && _roomsInfo$room3.postingRoles && !roomsInfo[room].postingRoles.includes(role) ? 'disabled' : ''}`,\n              children: [\"\\uD83D\\uDCCE\", /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"file-upload\",\n                type: \"file\",\n                onChange: handleFileUpload,\n                style: {\n                  display: 'none'\n                },\n                disabled: !connected || room && ((_roomsInfo$room4 = roomsInfo[room]) === null || _roomsInfo$room4 === void 0 ? void 0 : _roomsInfo$room4.postingRoles) && !roomsInfo[room].postingRoles.includes(role)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 913,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 908,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 907,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: !connected ? \"Reconnecting...\" : room && (_roomsInfo$room5 = roomsInfo[room]) !== null && _roomsInfo$room5 !== void 0 && _roomsInfo$room5.postingRoles && !roomsInfo[room].postingRoles.includes(role) ? \"Read-only channel\" : `Message ${selectedUser ? selectedUser.name : room}...`,\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            disabled: !connected || room && ((_roomsInfo$room6 = roomsInfo[room]) === null || _roomsInfo$room6 === void 0 ? void 0 : _roomsInfo$room6.postingRoles) && !roomsInfo[room].postingRoles.includes(role)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 922,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !connected || !message.trim() || room && ((_roomsInfo$room7 = roomsInfo[room]) === null || _roomsInfo$room7 === void 0 ? void 0 : _roomsInfo$room7.postingRoles) && !roomsInfo[room].postingRoles.includes(role),\n            className: !connected || !message.trim() || room && (_roomsInfo$room8 = roomsInfo[room]) !== null && _roomsInfo$room8 !== void 0 && _roomsInfo$room8.postingRoles && !roomsInfo[room].postingRoles.includes(role) ? 'disabled' : '',\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 934,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 906,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 738,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 538,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"A/YJE/Chi0uxRgwnlwqSoMA+3Yw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","timeout","App","_s","_roomsInfo$room","_roomsInfo$room2","_roomsInfo$room3","_roomsInfo$room4","_roomsInfo$room5","_roomsInfo$room6","_roomsInfo$room7","_roomsInfo$room8","user","setUser","message","setMessage","messages","setMessages","name","setName","role","setRole","users","setUsers","selectedUser","setSelectedUser","room","setRoom","roomsInfo","setRoomsInfo","connected","setConnected","notifications","setNotifications","unreadCount","setUnreadCount","showFileStorage","setShowFileStorage","messagesEndRef","notificationSound","Audio","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","Notification","permission","requestPermission","getFiles","filter","msg","isFile","playNotificationSound","play","catch","e","console","log","error","showBrowserNotification","title","body","document","hidden","icon","on","emit","id","data","rooms","alert","off","messageData","prevMessages","senderId","recipientId","prev","key","fileData","fileDataFormatted","fileMessage","text","sender","timestamp","Date","toISOString","messageId","type","size","recipientName","some","notification","from","now","preview","fileName","usersList","userData","prevUsers","exists","u","system","map","offline","handleJoin","preventDefault","trim","handleJoinRoom","roomName","handleSelectUser","handleSendMessage","postingRoles","includes","join","toString","Math","random","substr","handleFileUpload","file","target","files","reader","FileReader","onload","event","base64Data","result","readAsDataURL","handleFileDownload","link","createElement","href","download","appendChild","click","removeChild","dismissNotification","clearAllNotifications","className","children","_jsxFileName","lineNumber","columnNumber","onClick","length","onSubmit","placeholder","value","onChange","required","Object","entries","roomKey","roomData","index","round","toLocaleString","allowedRoles","toLocaleTimeString","ref","htmlFor","style","display","disabled","_c","$RefreshReg$"],"sources":["C:/Users/han_m/OneDrive/Documents/gitProjects/secure_chat_project/web-client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\n\n// Connect to the server\nconst socket = io('http://localhost:5000', {\n  reconnection: true,\n  reconnectionAttempts: 10,\n  reconnectionDelay: 1000,\n  reconnectionDelayMax: 5000,\n  timeout: 20000\n});\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [name, setName] = useState('');\n  const [role, setRole] = useState('student');\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [room, setRoom] = useState('general');\n  const [roomsInfo, setRoomsInfo] = useState({});\n  const [connected, setConnected] = useState(socket.connected);\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState({});\n  const [showFileStorage, setShowFileStorage] = useState(false);\n  const messagesEndRef = useRef(null);\n  const notificationSound = useRef(new Audio('/notification.mp3')); // Add an audio file to your public folder\n\n  // Auto-scroll to the bottom of messages\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Setup browser notifications\n  useEffect(() => {\n    // Request notification permission\n    if (Notification.permission !== 'granted' && Notification.permission !== 'denied') {\n      Notification.requestPermission();\n    }\n  }, []);\n\n  // Get files for the file storage page\n  const getFiles = () => {\n    return messages.filter(msg => msg.isFile);\n  };\n\n  // Play notification sound\n  const playNotificationSound = () => {\n    try {\n      notificationSound.current.play().catch(e => console.log('Error playing sound:', e));\n    } catch (error) {\n      console.log('Error playing notification sound:', error);\n    }\n  };\n\n  // Show browser notification\n  const showBrowserNotification = (title, body) => {\n    if (Notification.permission === 'granted' && document.hidden) {\n      try {\n        new Notification(title, {\n          body: body,\n          icon: '/favicon.ico'\n        });\n      } catch (error) {\n        console.log('Error showing notification:', error);\n      }\n    }\n  };\n\n  // Socket event listeners\n  useEffect(() => {\n    // Handle connection status\n    socket.on('connect', () => {\n      console.log('Connected to server');\n      setConnected(true);\n      \n      // If user was already logged in, try to reconnect\n      if (user) {\n        socket.emit('reconnect', {\n          name: user.name,\n          role: user.role,\n          id: user.id\n        });\n      }\n    });\n\n    socket.on('disconnect', () => {\n      console.log('Disconnected from server');\n      setConnected(false);\n    });\n\n    socket.on('connect_error', (error) => {\n      console.log('Connection error:', error.message);\n      setConnected(false);\n    });\n\n    // Handle reconnection success\n    socket.on('reconnected', (data) => {\n      console.log('Reconnected successfully');\n    });\n\n    // Handle room info\n    socket.on('roomsInfo', (rooms) => {\n      setRoomsInfo(rooms);\n    });\n\n    // Handle server ping to keep connection alive\n    socket.on('ping', () => {\n      socket.emit('pong');\n    });\n\n    // Handle errors\n    socket.on('error', (error) => {\n      alert(error.message);\n    });\n\n    return () => {\n      socket.off('connect');\n      socket.off('disconnect');\n      socket.off('connect_error');\n      socket.off('reconnected');\n      socket.off('roomsInfo');\n      socket.off('ping');\n      socket.off('error');\n    };\n  }, [user]);\n\n  // Messaging and notifications socket events\n  useEffect(() => {\n    // Handle incoming messages\n    socket.on('message', (messageData) => {\n      setMessages(prevMessages => [...prevMessages, messageData]);\n      \n      // Reset unread count for this chat\n      if (messageData.room === room || \n         (messageData.senderId === selectedUser?.id && messageData.recipientId === socket.id) ||\n         (messageData.recipientId === selectedUser?.id && messageData.senderId === socket.id)) {\n        setUnreadCount(prev => ({\n          ...prev,\n          [messageData.room || messageData.senderId]: 0\n        }));\n      } \n      // Increment unread count for other chats\n      else if (messageData.senderId !== socket.id) {\n        const key = messageData.room || messageData.senderId;\n        setUnreadCount(prev => ({\n          ...prev,\n          [key]: (prev[key] || 0) + 1\n        }));\n      }\n    });\n\n    // Handle file sharing\n    socket.on('fileShared', (fileData) => {\n      console.log('Received file shared event:', fileData);\n      \n      // Only process if it's meant for this user\n      if (fileData.recipientId && fileData.recipientId !== socket.id) return;\n      if (fileData.room && fileData.room !== room) return;\n      \n      // For direct messages sent by the current user, we've already added them locally\n      if (fileData.recipientId && fileData.senderId === socket.id) return;\n      \n      // Ensure data is in the correct format for web display\n      let fileDataFormatted = fileData.data;\n      \n      // Create a message for the file\n      const fileMessage = {\n        text: `Shared file: ${fileData.name}`,\n        sender: fileData.sender,\n        senderId: fileData.senderId,\n        role: fileData.role || 'unknown',\n        timestamp: fileData.timestamp || new Date().toISOString(),\n        isFile: true,\n        messageId: fileData.messageId,\n        fileData: {\n          name: fileData.name,\n          type: fileData.type || 'application/octet-stream',\n          size: fileData.size || 0,\n          data: fileDataFormatted\n        }\n      };\n      \n      if (fileData.recipientId) {\n        fileMessage.recipientId = fileData.recipientId;\n        fileMessage.recipientName = fileData.recipientName;\n      } else {\n        fileMessage.room = fileData.room;\n      }\n      \n      // Check if this message already exists\n      setMessages(prevMessages => {\n        if (fileData.messageId && prevMessages.some(msg => msg.messageId === fileData.messageId)) {\n          return prevMessages;\n        }\n        console.log('Adding file message to state:', fileMessage.text);\n        return [...prevMessages, fileMessage];\n      });\n      \n      // Increment unread count for other chats\n      if (fileData.senderId !== socket.id && \n         ((fileData.room && fileData.room !== room) || \n          (fileData.senderId && selectedUser?.id !== fileData.senderId))) {\n        const key = fileData.room || fileData.senderId;\n        setUnreadCount(prev => ({\n          ...prev,\n          [key]: (prev[key] || 0) + 1\n        }));\n      }\n    });\n\n    // Handle notifications\n    socket.on('notification', (notification) => {\n      // Don't show notifications for the current room or selected user\n      if (notification.room && notification.room === room) return;\n      if (notification.from === selectedUser?.name) return;\n      \n      // Add to notifications list with required fields\n      setNotifications(prev => [\n        ...prev, \n        { \n          ...notification, \n          id: Date.now(),\n          preview: notification.preview || 'New notification'\n        }\n      ]);\n      \n      // Play sound for all notifications\n      playNotificationSound();\n      \n      // Show browser notification based on type\n      switch (notification.type) {\n        case 'newMessage':\n          showBrowserNotification(\n            `New message from ${notification.from}`,\n            notification.preview || 'New message'\n          );\n          break;\n        case 'newRoomMessage':\n          showBrowserNotification(\n            `New message in ${notification.room}`,\n            `${notification.from}: ${notification.preview || 'New message'}`\n          );\n          break;\n        case 'newFile':\n          showBrowserNotification(\n            `New file from ${notification.from}`,\n            `Shared file: ${notification.fileName || 'File'}`\n          );\n          break;\n        case 'newRoomFile':\n          showBrowserNotification(\n            `New file in ${notification.room}`,\n            `${notification.from} shared file: ${notification.fileName || 'File'}`\n          );\n          break;\n        default:\n          break;\n      }\n    });\n\n    // Handle receiving user list\n    socket.on('usersList', (usersList) => {\n      setUsers(usersList);\n    });\n\n    // Handle user joining\n    socket.on('userJoined', (userData) => {\n      setUsers(prevUsers => {\n        // Check if user already exists\n        const exists = prevUsers.some(u => u.id === userData.id);\n        if (!exists) {\n          return [...prevUsers, userData];\n        }\n        return prevUsers;\n      });\n      \n      // Only add system message if it's for the correct room\n      setMessages(prevMessages => [\n        ...prevMessages,\n        {\n          system: true,\n          text: `${userData.name} joined the chat`,\n          timestamp: new Date().toISOString(),\n          room: userData.room || 'general' // Use the room from userData\n        }\n      ]);\n    });\n\n    // Handle user going offline\n    socket.on('userOffline', (userData) => {\n      setUsers(prevUsers => {\n        return prevUsers.map(user => {\n          if (user.id === userData.id) {\n            return { ...user, offline: true };\n          }\n          return user;\n        });\n      });\n      \n      setMessages(prevMessages => [\n        ...prevMessages,\n        {\n          system: true,\n          text: `${userData.name} went offline`,\n          timestamp: new Date().toISOString(),\n          room: 'general'\n        }\n      ]);\n    });\n\n    // Handle user leaving\n    socket.on('userLeft', (userData) => {\n      setUsers(prevUsers => prevUsers.filter(u => u.id !== userData.id));\n      \n      // Only add system message if it's for the correct room\n      setMessages(prevMessages => [\n        ...prevMessages,\n        {\n          system: true,\n          text: `${userData.name || 'A user'} left the chat`,\n          timestamp: new Date().toISOString(),\n          room: userData.room || 'general' // Use the room from userData\n        }\n      ]);\n      \n      // Clear selected user if they left\n      if (selectedUser && selectedUser.id === userData.id) {\n        setSelectedUser(null);\n        setRoom('general');\n      }\n    });\n\n    // Clean up on unmount\n    return () => {\n      socket.off('message');\n      socket.off('fileShared');\n      socket.off('notification');\n      socket.off('usersList');\n      socket.off('userJoined');\n      socket.off('userOffline');\n      socket.off('userLeft');\n    };\n  }, [selectedUser, room, socket.id]);\n\n  // Reset unread count when changing room or selected user\n  useEffect(() => {\n    if (room) {\n      setUnreadCount(prev => ({\n        ...prev,\n        [room]: 0\n      }));\n    } else if (selectedUser) {\n      setUnreadCount(prev => ({\n        ...prev,\n        [selectedUser.id]: 0\n      }));\n    }\n  }, [room, selectedUser]);\n\n  // Handle joining the chat\n  const handleJoin = (e) => {\n    e.preventDefault();\n    if (!name.trim()) return;\n\n    // Join the chat\n    const userData = { name, role };\n    socket.emit('join', userData);\n    setUser({ ...userData, id: socket.id });\n    \n    // Join general room by default\n    handleJoinRoom('general');\n  };\n\n  // Handle joining a room\n  const handleJoinRoom = (roomName) => {\n    socket.emit('joinRoom', roomName);\n    setRoom(roomName);\n    setSelectedUser(null);\n  };\n\n  // Handle selecting a user for direct message\n  const handleSelectUser = (selectedUser) => {\n    setSelectedUser(selectedUser);\n    setRoom(null);\n  };\n\n  // Handle sending messages\n  const handleSendMessage = (e) => {\n    e.preventDefault();\n    if (!message.trim() || !user) return;\n    \n    // Check if user has permission to post in this room\n    if (room && roomsInfo[room] && \n        roomsInfo[room].postingRoles && \n        !roomsInfo[room].postingRoles.includes(role)) {\n      alert(`Only ${roomsInfo[room].postingRoles.join(', ')} can post in ${roomsInfo[room].name}`);\n      return;\n    }\n\n    // Prepare message data\n    const messageData = {\n      text: message,\n      sender: user.name,\n      senderId: socket.id,\n      role: user.role,\n      timestamp: new Date().toISOString(),\n      messageId: Date.now().toString() + '-' + Math.random().toString(36).substr(2, 9)\n    };\n\n    // Add recipient or room information\n    if (selectedUser) {\n      messageData.recipientId = selectedUser.id;\n      messageData.recipientName = selectedUser.name;\n    } else {\n      messageData.room = room;\n    }\n\n    // Send the message\n    socket.emit('message', messageData);\n    setMessage('');\n  };\n  \n  // Handle file upload\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    \n    // Check if user has permission to post in this room\n    if (room && roomsInfo[room] && \n        roomsInfo[room].postingRoles && \n        !roomsInfo[room].postingRoles.includes(role)) {\n      alert(`Only ${roomsInfo[room].postingRoles.join(', ')} can post in ${roomsInfo[room].name}`);\n      return;\n    }\n    \n    // Limit file size to 5MB\n    if (file.size > 5 * 1024 * 1024) {\n      alert('File size exceeds 5MB limit');\n      return;\n    }\n    \n    // Create a reader to read the file\n    const reader = new FileReader();\n    \n    reader.onload = (event) => {\n      // Generate a unique message ID to track this upload\n      const messageId = Date.now().toString() + '-' + Math.random().toString(36).substr(2, 9);\n      \n      // File metadata to share with others\n      const fileData = {\n        name: file.name,\n        size: file.size,\n        type: file.type,\n        sender: user.name,\n        senderId: socket.id,\n        role: user.role,\n        timestamp: new Date().toISOString(),\n        messageId: messageId // Add a unique ID\n      };\n      \n      // Add recipient or room information\n      if (selectedUser) {\n        fileData.recipientId = selectedUser.id;\n        fileData.recipientName = selectedUser.name;\n      } else {\n        fileData.room = room;\n      }\n      \n      // Create a downloadable link for the file (base64 encoded)\n      const base64Data = event.target.result;\n      fileData.data = base64Data;\n      \n      // Send file notification through socket\n      socket.emit('fileShared', fileData);\n      \n      // Add file message to local messages\n      const fileMessage = {\n        text: `Shared file: ${file.name}`,\n        sender: user.name,\n        senderId: socket.id,\n        role: user.role,\n        timestamp: new Date().toISOString(),\n        isFile: true,\n        messageId: messageId,\n        fileData: {\n          name: file.name,\n          type: file.type,\n          size: file.size,\n          data: base64Data\n        }\n      };\n      \n      if (selectedUser) {\n        fileMessage.recipientId = selectedUser.id;\n        fileMessage.recipientName = selectedUser.name;\n      } else {\n        fileMessage.room = room;\n      }\n      \n      setMessages(prevMessages => [...prevMessages, fileMessage]);\n    };\n    \n    // Read file as data URL (base64)\n    reader.readAsDataURL(file);\n  };\n\n  // Handle file download\n  const handleFileDownload = (fileData) => {\n    // Create a link element\n    const link = document.createElement('a');\n    link.href = fileData.data;\n    link.download = fileData.name;\n    \n    // Append to body, click, and remove\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Dismiss a notification\n  const dismissNotification = (id) => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  };\n\n  // Clear all notifications\n  const clearAllNotifications = () => {\n    setNotifications([]);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Secure Chat Application</h1>\n        {user && (\n          <div className=\"user-info-header\">\n            <span className=\"welcome-text\">Hello, {user.name} ({user.role})</span>\n            {!showFileStorage && (\n              <button \n                className=\"file-storage-button\"\n                onClick={() => setShowFileStorage(true)}\n              >\n                File Storage\n              </button>\n            )}\n            {showFileStorage && (\n              <button \n                className=\"file-storage-button back\"\n                onClick={() => setShowFileStorage(false)}\n              >\n                Back to Chat\n              </button>\n            )}\n            <button \n              className=\"logout-button\"\n              onClick={() => {\n                // Send logout notification to server\n                if (socket.connected) {\n                  socket.emit('userLogout');\n                }\n                // Clear user data\n                setUser(null);\n                setMessages([]);\n                setUsers([]);\n                setSelectedUser(null);\n                setRoom(null);\n                setNotifications([]);\n                setUnreadCount({});\n                setShowFileStorage(false);\n              }}\n            >\n              Logout\n            </button>\n          </div>\n        )}\n        {!connected && user && (\n          <div className=\"connection-status offline\">Disconnected - Click to reconnect</div>\n        )}\n        {notifications.length > 0 && (\n          <div className=\"notifications-dropdown\">\n            <button className=\"notifications-button\">\n              Notifications ({notifications.length})\n            </button>\n            <div className=\"notifications-content\">\n              <div className=\"notifications-header\">\n                <h3>Notifications</h3>\n                <button onClick={clearAllNotifications} className=\"clear-notifications\">\n                  Clear All\n                </button>\n              </div>\n              {notifications.length === 0 ? (\n                <div className=\"notification-item\">No new notifications</div>\n              ) : (\n                notifications.map(notification => (\n                  <div key={notification.id} className=\"notification-item\">\n                    {notification.type === 'newMessage' && (\n                      <div>\n                        <strong>{notification.from}:</strong> {notification.preview}\n                      </div>\n                    )}\n                    {notification.type === 'newRoomMessage' && (\n                      <div>\n                        <strong>{notification.room}:</strong> {notification.from}: {notification.preview}\n                      </div>\n                    )}\n                    {(notification.type === 'newFile' || notification.type === 'newRoomFile') && (\n                      <div>\n                        <strong>{notification.type === 'newFile' ? notification.from : notification.room}:</strong> \n                        {notification.from} shared file: {notification.fileName}\n                      </div>\n                    )}\n                    <button \n                      onClick={() => dismissNotification(notification.id)}\n                      className=\"dismiss-notification\"\n                    >\n                      ✕\n                    </button>\n                  </div>\n                ))\n              )}\n            </div>\n          </div>\n        )}\n      </header>\n\n      {!user ? (\n        // Login form\n        <div className=\"login-container\">\n          <form onSubmit={handleJoin} className=\"login-form\">\n            <h2>Join the Chat</h2>\n            <input\n              type=\"text\"\n              placeholder=\"Enter your name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              required\n            />\n            <select \n              value={role} \n              onChange={(e) => setRole(e.target.value)}\n            >\n              <option value=\"student\">Student</option>\n              <option value=\"lecturer\">Lecturer</option>\n            </select>\n            <button type=\"submit\">Join</button>\n          </form>\n        </div>\n      ) : showFileStorage ? (\n        // File storage view\n        <div className=\"file-storage-container\">\n          <h2>My Files</h2>\n          \n          <div className=\"file-storage-tabs\">\n            <button \n              className={`file-tab ${selectedUser === null && room === null ? 'active' : ''}`}\n              onClick={() => {\n                setSelectedUser(null);\n                setRoom(null);\n              }}\n            >\n              All Files\n            </button>\n            {Object.entries(roomsInfo).map(([roomKey, roomData]) => (\n              <button \n                key={roomKey}\n                className={`file-tab ${room === roomKey ? 'active' : ''}`}\n                onClick={() => {\n                  setRoom(roomKey);\n                  setSelectedUser(null);\n                }}\n              >\n                {roomData.name || roomKey}\n              </button>\n            ))}\n          </div>\n          \n          <div className=\"file-list\">\n            {getFiles()\n              .filter(file => {\n                if (!room && !selectedUser) return true; // All files\n                if (room && file.room === room) return true; // Files from specific room\n                if (selectedUser && \n                    ((file.senderId === selectedUser.id && file.recipientId === socket.id) || \n                     (file.recipientId === selectedUser.id && file.senderId === socket.id))) {\n                  return true; // Files from specific user chat\n                }\n                return false;\n              })\n              .map((file, index) => (\n                <div key={index} className=\"file-item\">\n                  <div className=\"file-item-info\">\n                    <span className=\"file-item-name\">{file.fileData.name}</span>\n                    <div className=\"file-item-meta\">\n                      <span className=\"file-item-size\">{Math.round(file.fileData.size / 1024)} KB</span>\n                      <span className=\"file-item-from\">\n                        {file.room \n                          ? `Shared in ${file.room}`\n                          : file.senderId === socket.id \n                            ? `Sent to ${file.recipientName}`\n                            : `Received from ${file.sender}`\n                        }\n                      </span>\n                      <span className=\"file-item-date\">\n                        {new Date(file.timestamp).toLocaleString()}\n                      </span>\n                    </div>\n                  </div>\n                  <button \n                    className=\"download-button\"\n                    onClick={() => handleFileDownload(file.fileData)}\n                  >\n                    Download\n                  </button>\n                </div>\n              ))}\n            {getFiles().filter(file => {\n              if (!room && !selectedUser) return true;\n              if (room && file.room === room) return true;\n              if (selectedUser && \n                  ((file.senderId === selectedUser.id && file.recipientId === socket.id) || \n                   (file.recipientId === selectedUser.id && file.senderId === socket.id))) {\n                return true;\n              }\n              return false;\n            }).length === 0 && (\n              <div className=\"no-files\">No files found</div>\n            )}\n          </div>\n        </div>\n      ) : (\n        // Chat interface\n        <div className=\"chat-container\">\n          {/* Sidebar for users and rooms */}\n          <div className=\"sidebar\">\n            <div className=\"rooms-section\">\n              <h3>Rooms</h3>\n              <div className=\"rooms-list\">\n                {Object.entries(roomsInfo).length > 0 ? \n                  Object.entries(roomsInfo).map(([roomKey, roomData]) => \n                    // Only show rooms user has access to\n                    roomData.allowedRoles && roomData.allowedRoles.includes(role) && (\n                      <div \n                        key={roomKey}\n                        className={`room ${room === roomKey ? 'active' : ''}`}\n                        onClick={() => handleJoinRoom(roomKey)}\n                      >\n                        <span className=\"room-name\">\n                          {roomData.name || roomKey}\n                          {unreadCount[roomKey] > 0 && (\n                            <span className=\"unread-badge\">{unreadCount[roomKey]}</span>\n                          )}\n                        </span>\n                        {roomData.postingRoles && !roomData.postingRoles.includes(role) && (\n                          <span className=\"read-only-label\">Read-only</span>\n                        )}\n                      </div>\n                    )\n                  ) : (\n                    // Fallback for when roomsInfo is not available yet\n                    <>\n                      <div \n                        className={`room ${room === 'general' ? 'active' : ''}`}\n                        onClick={() => handleJoinRoom('general')}\n                      >\n                        General\n                        {unreadCount['general'] > 0 && (\n                          <span className=\"unread-badge\">{unreadCount['general']}</span>\n                        )}\n                      </div>\n                      <div \n                        className={`room ${room === 'assignments' ? 'active' : ''}`}\n                        onClick={() => handleJoinRoom('assignments')}\n                      >\n                        Assignments\n                        {unreadCount['assignments'] > 0 && (\n                          <span className=\"unread-badge\">{unreadCount['assignments']}</span>\n                        )}\n                      </div>\n                      <div \n                        className={`room ${room === 'announcements' ? 'active' : ''}`}\n                        onClick={() => handleJoinRoom('announcements')}\n                      >\n                        Announcements\n                        {unreadCount['announcements'] > 0 && (\n                          <span className=\"unread-badge\">{unreadCount['announcements']}</span>\n                        )}\n                        {role !== 'lecturer' && role !== 'admin' && (\n                          <span className=\"read-only-label\">Read-only</span>\n                        )}\n                      </div>\n                    </>\n                  )\n                }\n              </div>\n            </div>\n\n            <div className=\"users-section\">\n              <h3>Users</h3>\n              <div className=\"users-list\">\n                {users.filter(u => u.id !== socket.id).map(u => (\n                  <div \n                    key={u.id}\n                    className={`user ${selectedUser?.id === u.id ? 'active' : ''} ${u.offline ? 'offline' : ''}`}\n                    onClick={() => handleSelectUser(u)}\n                  >\n                    <div className=\"user-info\">\n                      <span className=\"user-name\">{u.name}</span>\n                      <span className=\"user-role\">{u.role}</span>\n                    </div>\n                    <div className=\"user-status\">\n                      {unreadCount[u.id] > 0 && (\n                        <span className=\"unread-badge\">{unreadCount[u.id]}</span>\n                      )}\n                      {u.offline && (\n                        <span className=\"offline-indicator\">Offline</span>\n                      )}\n                    </div>\n                  </div>\n                ))}\n                {users.length <= 1 && (\n                  <div className=\"no-users\">No other users online</div>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Main chat area */}\n          <div className=\"main-chat\">\n            <div className=\"chat-header\">\n              {selectedUser ? (\n                <h2>\n                  Chat with {selectedUser.name}\n                  {selectedUser.offline && <span className=\"user-offline-status\"> (Offline)</span>}\n                </h2>\n              ) : (\n                <h2>\n                  Room: {roomsInfo[room]?.name || room}\n                  {room && roomsInfo[room]?.postingRoles && !roomsInfo[room].postingRoles.includes(role) && (\n                    <span className=\"read-only-header\"> (Read-only)</span>\n                  )}\n                </h2>\n              )}\n            </div>\n\n            <div className=\"messages-container\">\n              {messages\n                .filter(msg => {\n                  // Filter messages based on current view (direct or room)\n                  if (selectedUser) {\n                    return (msg.senderId === selectedUser.id && msg.recipientId === socket.id) || \n                           (msg.recipientId === selectedUser.id && msg.senderId === socket.id);\n                  } else {\n                    // System messages should only show in the specified room\n                    if (msg.system) {\n                      return msg.room === room;\n                    }\n                    return msg.room === room;\n                  }\n                })\n                .map((msg, index) => (\n                  <div \n                    key={index} \n                    className={`message ${msg.system ? 'system-message' : \n                      msg.senderId === socket.id ? 'my-message' : 'other-message'}`}\n                  >\n                    {!msg.system && (\n                      <div className=\"message-header\">\n                        <span className=\"sender\">{msg.sender}</span>\n                        <span className=\"role\">{msg.role}</span>\n                        <span className=\"time\">\n                          {new Date(msg.timestamp).toLocaleTimeString()}\n                        </span>\n                      </div>\n                    )}\n                    \n                    {/* Check if it's a file message or regular message */}\n                    {!msg.system && msg.isFile ? (\n                      <div className=\"file-attachment\">\n                        <div className=\"file-info\">\n                          <span className=\"file-name\">{msg.text}</span>\n                          <span className=\"file-size\">\n                            {Math.round(msg.fileData.size / 1024)} KB\n                          </span>\n                        </div>\n                        <button \n                          className=\"download-button\"\n                          onClick={() => handleFileDownload(msg.fileData)}\n                        >\n                          Download\n                        </button>\n                      </div>\n                    ) : (\n                      <div className=\"message-text\">{msg.text}</div>\n                    )}\n                  </div>\n                ))}\n              <div ref={messagesEndRef} />\n            </div>\n          \n            <form onSubmit={handleSendMessage} className=\"message-form\">\n              <div className=\"attachment-button\">\n                <label \n                  htmlFor=\"file-upload\" \n                  className={`file-label ${!connected || (room && roomsInfo[room]?.postingRoles && !roomsInfo[room].postingRoles.includes(role)) ? 'disabled' : ''}`}\n                >\n                  📎\n                  <input\n                    id=\"file-upload\"\n                    type=\"file\"\n                    onChange={handleFileUpload}\n                    style={{ display: 'none' }}\n                    disabled={!connected || (room && roomsInfo[room]?.postingRoles && !roomsInfo[room].postingRoles.includes(role))}\n                  />\n                </label>\n              </div>\n              <input\n                type=\"text\"\n                placeholder={\n                  !connected ? \"Reconnecting...\" : \n                  (room && roomsInfo[room]?.postingRoles && !roomsInfo[room].postingRoles.includes(role)) ?\n                  \"Read-only channel\" : \n                  `Message ${selectedUser ? selectedUser.name : room}...`\n                }\n                value={message}\n                onChange={(e) => setMessage(e.target.value)}\n                disabled={!connected || (room && roomsInfo[room]?.postingRoles && !roomsInfo[room].postingRoles.includes(role))}\n              />\n              <button \n                type=\"submit\"\n                disabled={!connected || !message.trim() || (room && roomsInfo[room]?.postingRoles && !roomsInfo[room].postingRoles.includes(role))}\n                className={!connected || !message.trim() || (room && roomsInfo[room]?.postingRoles && !roomsInfo[room].postingRoles.includes(role)) ? 'disabled' : ''}\n              >\n                Send\n              </button>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}